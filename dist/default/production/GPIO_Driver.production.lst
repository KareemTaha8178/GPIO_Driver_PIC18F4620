

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Sep 18 18:08:49 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4620 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     
    64                           	psect	idataCOMRAM
    65   00F7FB                     __pidataCOMRAM:
    66                           	callstack 0
    67                           
    68                           ;initializer for _port_register
    69   00F7FB  80                 	db	128
    70   00F7FC  0F                 	db	15
    71   00F7FD  81                 	db	129
    72   00F7FE  0F                 	db	15
    73   00F7FF  82                 	db	130
    74   00F800  0F                 	db	15
    75   00F801  83                 	db	131
    76   00F802  0F                 	db	15
    77   00F803  84                 	db	132
    78   00F804  0F                 	db	15
    79                           
    80                           ;initializer for _lat_register
    81   00F805  89                 	db	137
    82   00F806  0F                 	db	15
    83   00F807  8A                 	db	138
    84   00F808  0F                 	db	15
    85   00F809  8B                 	db	139
    86   00F80A  0F                 	db	15
    87   00F80B  8C                 	db	140
    88   00F80C  0F                 	db	15
    89   00F80D  8D                 	db	141
    90   00F80E  0F                 	db	15
    91                           
    92                           ;initializer for _tris_register
    93   00F80F  92                 	db	146
    94   00F810  0F                 	db	15
    95   00F811  93                 	db	147
    96   00F812  0F                 	db	15
    97   00F813  94                 	db	148
    98   00F814  0F                 	db	15
    99   00F815  95                 	db	149
   100   00F816  0F                 	db	15
   101   00F817  96                 	db	150
   102   00F818  0F                 	db	15
   103                           
   104                           ;initializer for _btn_high_last_valid_status
   105   00F819  01                 	db	1
   106                           
   107                           ;initializer for _btn_high_valid_status
   108   00F81A  01                 	db	1
   109                           
   110                           ;initializer for _ret
   111   00F81B  01                 	db	1
   112                           
   113                           ;initializer for _btn_1
   114   00F81C  52                 	db	82
   115   00F81D  01                 	db	1
   116   00F81E  00                 	db	0
   117                           
   118                           ;initializer for _btn_high_status
   119   00F81F  01                 	db	1
   120                           
   121                           ;initializer for _led_2
   122   00F820  12                 	db	18
   123                           
   124                           ;initializer for _led_1
   125   00F821  02                 	db	2
   126   000000                     _PORTE	set	3972
   127   000000                     _PORTD	set	3971
   128   000000                     _PORTC	set	3970
   129   000000                     _PORTB	set	3969
   130   000000                     _PORTA	set	3968
   131   000000                     _LATA	set	3977
   132   000000                     _TRISA	set	3986
   133   000000                     _TRISE	set	3990
   134   000000                     _TRISD	set	3989
   135   000000                     _TRISC	set	3988
   136   000000                     _TRISB	set	3987
   137   000000                     _LATE	set	3981
   138   000000                     _LATD	set	3980
   139   000000                     _LATC	set	3979
   140   000000                     _LATB	set	3978
   141                           
   142                           ; #config settings
   143                           
   144                           	psect	cinit
   145   00F8A4                     __pcinit:
   146                           	callstack 0
   147   00F8A4                     start_initialization:
   148                           	callstack 0
   149   00F8A4                     __initialization:
   150                           	callstack 0
   151                           
   152                           ; Initialize objects allocated to COMRAM (39 bytes)
   153                           ; load TBLPTR registers with __pidataCOMRAM
   154   00F8A4  0EFB               	movlw	low __pidataCOMRAM
   155   00F8A6  6EF6               	movwf	tblptrl,c
   156   00F8A8  0EF7               	movlw	high __pidataCOMRAM
   157   00F8AA  6EF7               	movwf	tblptrh,c
   158   00F8AC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   159   00F8AE  6EF8               	movwf	tblptru,c
   160   00F8B0  EE00  F001         	lfsr	0,__pdataCOMRAM
   161   00F8B4  EE10 F027          	lfsr	1,39
   162   00F8B8                     copy_data0:
   163   00F8B8  0009               	tblrd		*+
   164   00F8BA  CFF5 FFEE          	movff	tablat,postinc0
   165   00F8BE  50E5               	movf	postdec1,w,c
   166   00F8C0  50E1               	movf	fsr1l,w,c
   167   00F8C2  E1FA               	bnz	copy_data0
   168                           
   169                           ; Clear objects allocated to COMRAM (7 bytes)
   170   00F8C4  EE00  F039         	lfsr	0,__pbssCOMRAM
   171   00F8C8  0E07               	movlw	7
   172   00F8CA                     clear_0:
   173   00F8CA  6AEE               	clrf	postinc0,c
   174   00F8CC  06E8               	decf	wreg,f,c
   175   00F8CE  E1FD               	bnz	clear_0
   176   00F8D0                     end_of_initialization:
   177                           	callstack 0
   178   00F8D0                     __end_of__initialization:
   179                           	callstack 0
   180   00F8D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   181   00F8D2  6EF8               	movwf	tblptru,c
   182   00F8D4  0100               	movlb	0
   183   00F8D6  EF39  F07E         	goto	_main	;jump to C main() function
   184                           
   185                           	psect	bssCOMRAM
   186   000039                     __pbssCOMRAM:
   187                           	callstack 0
   188   000039                     _btn_high_valid:
   189                           	callstack 0
   190   000039                     	ds	2
   191   00003B                     _Program_Selected:
   192                           	callstack 0
   193   00003B                     	ds	1
   194   00003C                     led_toggle_logic@F2891:
   195                           	callstack 0
   196   00003C                     	ds	1
   197   00003D                     led_turn_off@F2886:
   198                           	callstack 0
   199   00003D                     	ds	1
   200   00003E                     led_turn_on@F2881:
   201                           	callstack 0
   202   00003E                     	ds	1
   203   00003F                     led_initialize@F2876:
   204                           	callstack 0
   205   00003F                     	ds	1
   206                           
   207                           	psect	dataCOMRAM
   208   000001                     __pdataCOMRAM:
   209                           	callstack 0
   210   000001                     _port_register:
   211                           	callstack 0
   212   000001                     	ds	10
   213   00000B                     _lat_register:
   214                           	callstack 0
   215   00000B                     	ds	10
   216   000015                     _tris_register:
   217                           	callstack 0
   218   000015                     	ds	10
   219   00001F                     _btn_high_last_valid_status:
   220                           	callstack 0
   221   00001F                     	ds	1
   222   000020                     _btn_high_valid_status:
   223                           	callstack 0
   224   000020                     	ds	1
   225   000021                     _ret:
   226                           	callstack 0
   227   000021                     	ds	1
   228   000022                     _btn_1:
   229                           	callstack 0
   230   000022                     	ds	3
   231   000025                     _btn_high_status:
   232                           	callstack 0
   233   000025                     	ds	1
   234   000026                     _led_2:
   235                           	callstack 0
   236   000026                     	ds	1
   237   000027                     _led_1:
   238                           	callstack 0
   239   000027                     	ds	1
   240                           
   241                           	psect	cstackCOMRAM
   242   000028                     __pcstackCOMRAM:
   243                           	callstack 0
   244   000028                     gpio_pin_direction_init@_pin_config_t:
   245                           	callstack 0
   246   000028                     gpio_pin_write_logic@_pin_config_t:
   247                           	callstack 0
   248   000028                     gpio_pin_read_logic@_pin_config_t:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x0
   252   000028                     	ds	2
   253   00002A                     ??_gpio_pin_direction_init:
   254   00002A                     gpio_pin_write_logic@logic:
   255                           	callstack 0
   256   00002A                     gpio_pin_read_logic@logic:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x2
   260   00002A                     	ds	1
   261   00002B                     ??_gpio_pin_write_logic:
   262                           
   263                           ; 1 bytes @ 0x3
   264   00002B                     	ds	1
   265   00002C                     ??_gpio_pin_read_logic:
   266                           
   267                           ; 1 bytes @ 0x4
   268   00002C                     	ds	4
   269   000030                     gpio_pin_direction_init@ret:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x8
   273   000030                     	ds	1
   274   000031                     button_initialize@btn:
   275                           	callstack 0
   276   000031                     button_read_state@btn:
   277                           	callstack 0
   278   000031                     led_initialize@led:
   279                           	callstack 0
   280   000031                     led_turn_on@led:
   281                           	callstack 0
   282   000031                     led_turn_off@led:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x9
   286   000031                     	ds	2
   287   000033                     ??_led_initialize:
   288   000033                     ??_led_turn_on:
   289   000033                     ??_led_turn_off:
   290   000033                     button_initialize@ret:
   291                           	callstack 0
   292   000033                     button_read_state@btn_state:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0xB
   296   000033                     	ds	1
   297   000034                     led_initialize@ret:
   298                           	callstack 0
   299   000034                     led_turn_on@pin_obj:
   300                           	callstack 0
   301   000034                     led_turn_off@pin_obj:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0xC
   305   000034                     	ds	1
   306   000035                     led_initialize@pin_obj:
   307                           	callstack 0
   308   000035                     program_2@counter:
   309                           	callstack 0
   310   000035                     program_3@counter:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0xD
   314   000035                     	ds	1
   315   000036                     button_read_state@Pin_Logic_Status:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0xE
   319   000036                     	ds	1
   320   000037                     ??_main:
   321                           
   322                           ; 1 bytes @ 0xF
   323   000037                     	ds	2
   324                           
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 67 in file "Application.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  2  221[None  ] int 
   337 ;; Registers used:
   338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   346 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   348 ;;Total ram usage:        2 bytes
   349 ;; Hardware stack levels required when called: 3
   350 ;; This function calls:
   351 ;;		_Application_initialize
   352 ;;		_button_read_state
   353 ;;		_program_1
   354 ;;		_program_2
   355 ;;		_program_3
   356 ;; This function is called by:
   357 ;;		Startup code after reset
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text0
   362   00FC72                     __ptext0:
   363                           	callstack 0
   364   00FC72                     _main:
   365                           	callstack 28
   366   00FC72                     
   367                           ;Application.c: 68:     Application_initialize();
   368   00FC72  EC3C  F07C         	call	_Application_initialize	;wreg free
   369   00FC76                     l222:
   370                           
   371                           ;Application.c: 72:         ret = button_read_state(&btn_1, &btn_high_status);
   372   00FC76  0E22               	movlw	low _btn_1
   373   00FC78  6E31               	movwf	button_read_state@btn^0,c
   374   00FC7A  0E00               	movlw	high _btn_1
   375   00FC7C  6E32               	movwf	(button_read_state@btn+1)^0,c
   376   00FC7E  0E25               	movlw	low _btn_high_status
   377   00FC80  6E33               	movwf	button_read_state@btn_state^0,c
   378   00FC82  0E00               	movlw	high _btn_high_status
   379   00FC84  6E34               	movwf	(button_read_state@btn_state+1)^0,c
   380   00FC86  EC73  F07D         	call	_button_read_state	;wreg free
   381   00FC8A  6E21               	movwf	_ret^0,c
   382   00FC8C                     
   383                           ;Application.c: 74:         if(BUTTON_PRESSED == btn_high_status){
   384   00FC8C  5025               	movf	_btn_high_status^0,w,c
   385   00FC8E  A4D8               	btfss	status,2,c
   386   00FC90  EF4C  F07E         	goto	u881
   387   00FC94  EF4E  F07E         	goto	u880
   388   00FC98                     u881:
   389   00FC98  EF5F  F07E         	goto	l1472
   390   00FC9C                     u880:
   391   00FC9C                     
   392                           ;Application.c: 75:             btn_high_valid++;
   393   00FC9C  4A39               	infsnz	_btn_high_valid^0,f,c
   394   00FC9E  2A3A               	incf	(_btn_high_valid+1)^0,f,c
   395   00FCA0                     
   396                           ;Application.c: 76:             if(btn_high_valid > 500){
   397   00FCA0  0EF5               	movlw	245
   398   00FCA2  5C39               	subwf	_btn_high_valid^0,w,c
   399   00FCA4  0E01               	movlw	1
   400   00FCA6  583A               	subwfb	(_btn_high_valid+1)^0,w,c
   401   00FCA8  A0D8               	btfss	status,0,c
   402   00FCAA  EF59  F07E         	goto	u891
   403   00FCAE  EF5B  F07E         	goto	u890
   404   00FCB2                     u891:
   405   00FCB2  EF65  F07E         	goto	l1474
   406   00FCB6                     u890:
   407   00FCB6                     
   408                           ;Application.c: 77:                 btn_high_valid_status = BUTTON_PRESSED;
   409   00FCB6  0E00               	movlw	0
   410   00FCB8  6E20               	movwf	_btn_high_valid_status^0,c
   411   00FCBA  EF65  F07E         	goto	l1474
   412   00FCBE                     l1472:
   413                           
   414                           ;Application.c: 81:             btn_high_valid = 0;
   415   00FCBE  0E00               	movlw	0
   416   00FCC0  6E3A               	movwf	(_btn_high_valid+1)^0,c
   417   00FCC2  0E00               	movlw	0
   418   00FCC4  6E39               	movwf	_btn_high_valid^0,c
   419                           
   420                           ;Application.c: 82:             btn_high_valid_status = BUTTON_RELEASED;
   421   00FCC6  0E01               	movlw	1
   422   00FCC8  6E20               	movwf	_btn_high_valid_status^0,c
   423   00FCCA                     l1474:
   424                           
   425                           ;Application.c: 85:         if(btn_high_valid_status != btn_high_last_valid_status){
   426   00FCCA  501F               	movf	_btn_high_last_valid_status^0,w,c
   427   00FCCC  1820               	xorwf	_btn_high_valid_status^0,w,c
   428   00FCCE  B4D8               	btfsc	status,2,c
   429   00FCD0  EF6C  F07E         	goto	u901
   430   00FCD4  EF6E  F07E         	goto	u900
   431   00FCD8                     u901:
   432   00FCD8  EF3B  F07E         	goto	l222
   433   00FCDC                     u900:
   434   00FCDC                     
   435                           ;Application.c: 86:             btn_high_last_valid_status = btn_high_valid_status;
   436   00FCDC  C020  F01F         	movff	_btn_high_valid_status,_btn_high_last_valid_status
   437   00FCE0                     
   438                           ;Application.c: 87:             if(BUTTON_PRESSED == btn_high_valid_status){
   439   00FCE0  5020               	movf	_btn_high_valid_status^0,w,c
   440   00FCE2  A4D8               	btfss	status,2,c
   441   00FCE4  EF76  F07E         	goto	u911
   442   00FCE8  EF78  F07E         	goto	u910
   443   00FCEC                     u911:
   444   00FCEC  EF3B  F07E         	goto	l222
   445   00FCF0                     u910:
   446   00FCF0                     
   447                           ;Application.c: 88:                 if(3 == Program_Selected){
   448   00FCF0  0E03               	movlw	3
   449   00FCF2  183B               	xorwf	_Program_Selected^0,w,c
   450   00FCF4  A4D8               	btfss	status,2,c
   451   00FCF6  EF7F  F07E         	goto	u921
   452   00FCFA  EF81  F07E         	goto	u920
   453   00FCFE                     u921:
   454   00FCFE  EF83  F07E         	goto	l1484
   455   00FD02                     u920:
   456   00FD02                     
   457                           ;Application.c: 89:                     Program_Selected = 0;
   458   00FD02  0E00               	movlw	0
   459   00FD04  6E3B               	movwf	_Program_Selected^0,c
   460   00FD06                     l1484:
   461                           
   462                           ;Application.c: 92:                 Program_Selected++;
   463   00FD06  2A3B               	incf	_Program_Selected^0,f,c
   464                           
   465                           ;Application.c: 93:                 switch(Program_Selected){
   466   00FD08  EF92  F07E         	goto	l1494
   467   00FD0C                     l1486:
   468   00FD0C  EC11  F07C         	call	_program_1	;wreg free
   469   00FD10  EF3B  F07E         	goto	l222
   470   00FD14                     l1488:
   471   00FD14  EC6D  F07C         	call	_program_2	;wreg free
   472   00FD18  EF3B  F07E         	goto	l222
   473   00FD1C                     l1490:
   474   00FD1C  EC8F  F07C         	call	_program_3	;wreg free
   475   00FD20  EF3B  F07E         	goto	l222
   476   00FD24                     l1494:
   477   00FD24  503B               	movf	_Program_Selected^0,w,c
   478   00FD26  6E37               	movwf	??_main^0,c
   479   00FD28  6A38               	clrf	(??_main+1)^0,c
   480                           
   481                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   482                           ; Switch size 1, requested type "simple"
   483                           ; Number of cases is 1, Range of values is 0 to 0
   484                           ; switch strategies available:
   485                           ; Name         Instructions Cycles
   486                           ; simple_byte            4     3 (average)
   487                           ;	Chosen strategy is simple_byte
   488   00FD2A  5038               	movf	(??_main+1)^0,w,c
   489   00FD2C  0A00               	xorlw	0	; case 0
   490   00FD2E  B4D8               	btfsc	status,2,c
   491   00FD30  EF9C  F07E         	goto	l1512
   492   00FD34  EFAB  F07E         	goto	l226
   493   00FD38                     l1512:
   494                           
   495                           ; Switch size 1, requested type "simple"
   496                           ; Number of cases is 3, Range of values is 1 to 3
   497                           ; switch strategies available:
   498                           ; Name         Instructions Cycles
   499                           ; simple_byte           10     6 (average)
   500                           ;	Chosen strategy is simple_byte
   501   00FD38  5037               	movf	??_main^0,w,c
   502   00FD3A  0A01               	xorlw	1	; case 1
   503   00FD3C  B4D8               	btfsc	status,2,c
   504   00FD3E  EF86  F07E         	goto	l1486
   505   00FD42  0A03               	xorlw	3	; case 2
   506   00FD44  B4D8               	btfsc	status,2,c
   507   00FD46  EF8A  F07E         	goto	l1488
   508   00FD4A  0A01               	xorlw	1	; case 3
   509   00FD4C  B4D8               	btfsc	status,2,c
   510   00FD4E  EF8E  F07E         	goto	l1490
   511   00FD52  EFAB  F07E         	goto	l226
   512   00FD56                     l226:
   513   00FD56  EF3B  F07E         	goto	l222
   514   00FD5A  EF00  F000         	goto	start
   515   00FD5E                     __end_of_main:
   516                           	callstack 0
   517                           
   518 ;; *************** function _program_3 *****************
   519 ;; Defined at:
   520 ;;		line 58 in file "Application.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  counter         1   13[COMRAM] unsigned char 
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;Total ram usage:        1 bytes
   539 ;; Hardware stack levels used: 1
   540 ;; Hardware stack levels required when called: 2
   541 ;; This function calls:
   542 ;;		_led_turn_off
   543 ;;		_led_turn_on
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text1
   550   00F91E                     __ptext1:
   551                           	callstack 0
   552   00F91E                     _program_3:
   553                           	callstack 28
   554   00F91E                     
   555                           ;Application.c: 59:     uint8 counter = 0;
   556   00F91E  0E00               	movlw	0
   557   00F920  6E35               	movwf	program_3@counter^0,c
   558                           
   559                           ;Application.c: 60:     for(counter = 0; counter < 3; counter ++){
   560   00F922  0E00               	movlw	0
   561   00F924  6E35               	movwf	program_3@counter^0,c
   562   00F926                     l1452:
   563                           
   564                           ;Application.c: 61:         led_turn_on(&led_1);
   565   00F926  0E27               	movlw	low _led_1
   566   00F928  6E31               	movwf	led_turn_on@led^0,c
   567   00F92A  0E00               	movlw	high _led_1
   568   00F92C  6E32               	movwf	(led_turn_on@led+1)^0,c
   569   00F92E  ECEC  F07C         	call	_led_turn_on	;wreg free
   570   00F932                     
   571                           ;Application.c: 62:         _delay(1000);
   572   00F932  0EC8               	movlw	200
   573   00F934                     u937:
   574   00F934  D000               	nop2	
   575   00F936  2EE8               	decfsz	wreg,f,c
   576   00F938  D7FD               	bra	u937
   577   00F93A                     
   578                           ;Application.c: 63:         led_turn_off(&led_1);
   579   00F93A  0E27               	movlw	low _led_1
   580   00F93C  6E31               	movwf	led_turn_off@led^0,c
   581   00F93E  0E00               	movlw	high _led_1
   582   00F940  6E32               	movwf	(led_turn_off@led+1)^0,c
   583   00F942  ECB1  F07C         	call	_led_turn_off	;wreg free
   584                           
   585                           ;Application.c: 64:         _delay(1000);
   586   00F946  0EC8               	movlw	200
   587   00F948                     u947:
   588   00F948  D000               	nop2	
   589   00F94A  2EE8               	decfsz	wreg,f,c
   590   00F94C  D7FD               	bra	u947
   591   00F94E                     
   592                           ;Application.c: 65:     }
   593   00F94E  2A35               	incf	program_3@counter^0,f,c
   594   00F950  0E02               	movlw	2
   595   00F952  6435               	cpfsgt	program_3@counter^0,c
   596   00F954  EFAE  F07C         	goto	u871
   597   00F958  EFB0  F07C         	goto	u870
   598   00F95C                     u871:
   599   00F95C  EF93  F07C         	goto	l1452
   600   00F960                     u870:
   601   00F960  0012               	return		;funcret
   602   00F962                     __end_of_program_3:
   603                           	callstack 0
   604                           
   605 ;; *************** function _program_2 *****************
   606 ;; Defined at:
   607 ;;		line 48 in file "Application.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  counter         1   13[COMRAM] unsigned char 
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;Total ram usage:        1 bytes
   626 ;; Hardware stack levels used: 1
   627 ;; Hardware stack levels required when called: 2
   628 ;; This function calls:
   629 ;;		_led_turn_off
   630 ;;		_led_turn_on
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           	psect	text2
   637   00F8DA                     __ptext2:
   638                           	callstack 0
   639   00F8DA                     _program_2:
   640                           	callstack 28
   641   00F8DA                     
   642                           ;Application.c: 49:     uint8 counter = 0;
   643   00F8DA  0E00               	movlw	0
   644   00F8DC  6E35               	movwf	program_2@counter^0,c
   645                           
   646                           ;Application.c: 50:     for(counter = 0; counter < 2; counter ++){
   647   00F8DE  0E00               	movlw	0
   648   00F8E0  6E35               	movwf	program_2@counter^0,c
   649   00F8E2                     l1438:
   650                           
   651                           ;Application.c: 51:         led_turn_on(&led_1);
   652   00F8E2  0E27               	movlw	low _led_1
   653   00F8E4  6E31               	movwf	led_turn_on@led^0,c
   654   00F8E6  0E00               	movlw	high _led_1
   655   00F8E8  6E32               	movwf	(led_turn_on@led+1)^0,c
   656   00F8EA  ECEC  F07C         	call	_led_turn_on	;wreg free
   657   00F8EE                     
   658                           ;Application.c: 52:         _delay(1000);
   659   00F8EE  0EC8               	movlw	200
   660   00F8F0                     u957:
   661   00F8F0  D000               	nop2	
   662   00F8F2  2EE8               	decfsz	wreg,f,c
   663   00F8F4  D7FD               	bra	u957
   664   00F8F6                     
   665                           ;Application.c: 53:         led_turn_off(&led_1);
   666   00F8F6  0E27               	movlw	low _led_1
   667   00F8F8  6E31               	movwf	led_turn_off@led^0,c
   668   00F8FA  0E00               	movlw	high _led_1
   669   00F8FC  6E32               	movwf	(led_turn_off@led+1)^0,c
   670   00F8FE  ECB1  F07C         	call	_led_turn_off	;wreg free
   671                           
   672                           ;Application.c: 54:         _delay(1000);
   673   00F902  0EC8               	movlw	200
   674   00F904                     u967:
   675   00F904  D000               	nop2	
   676   00F906  2EE8               	decfsz	wreg,f,c
   677   00F908  D7FD               	bra	u967
   678   00F90A                     
   679                           ;Application.c: 55:     }
   680   00F90A  2A35               	incf	program_2@counter^0,f,c
   681   00F90C  0E01               	movlw	1
   682   00F90E  6435               	cpfsgt	program_2@counter^0,c
   683   00F910  EF8C  F07C         	goto	u861
   684   00F914  EF8E  F07C         	goto	u860
   685   00F918                     u861:
   686   00F918  EF71  F07C         	goto	l1438
   687   00F91C                     u860:
   688   00F91C  0012               	return		;funcret
   689   00F91E                     __end_of_program_2:
   690                           	callstack 0
   691                           
   692 ;; *************** function _program_1 *****************
   693 ;; Defined at:
   694 ;;		line 41 in file "Application.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels used: 1
   714 ;; Hardware stack levels required when called: 2
   715 ;; This function calls:
   716 ;;		_led_turn_off
   717 ;;		_led_turn_on
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text3
   724   00F822                     __ptext3:
   725                           	callstack 0
   726   00F822                     _program_1:
   727                           	callstack 28
   728   00F822                     
   729                           ;Application.c: 42:     led_turn_on(&led_1);
   730   00F822  0E27               	movlw	low _led_1
   731   00F824  6E31               	movwf	led_turn_on@led^0,c
   732   00F826  0E00               	movlw	high _led_1
   733   00F828  6E32               	movwf	(led_turn_on@led+1)^0,c
   734   00F82A  ECEC  F07C         	call	_led_turn_on	;wreg free
   735   00F82E                     
   736                           ;Application.c: 43:     _delay(1000);
   737   00F82E  0EC8               	movlw	200
   738   00F830                     u977:
   739   00F830  D000               	nop2	
   740   00F832  2EE8               	decfsz	wreg,f,c
   741   00F834  D7FD               	bra	u977
   742   00F836                     
   743                           ;Application.c: 44:     led_turn_off(&led_1);
   744   00F836  0E27               	movlw	low _led_1
   745   00F838  6E31               	movwf	led_turn_off@led^0,c
   746   00F83A  0E00               	movlw	high _led_1
   747   00F83C  6E32               	movwf	(led_turn_off@led+1)^0,c
   748   00F83E  ECB1  F07C         	call	_led_turn_off	;wreg free
   749                           
   750                           ;Application.c: 45:     _delay(1000);
   751   00F842  0EC8               	movlw	200
   752   00F844                     u987:
   753   00F844  D000               	nop2	
   754   00F846  2EE8               	decfsz	wreg,f,c
   755   00F848  D7FD               	bra	u987
   756   00F84A  0012               	return		;funcret
   757   00F84C                     __end_of_program_1:
   758                           	callstack 0
   759                           
   760 ;; *************** function _led_turn_on *****************
   761 ;; Defined at:
   762 ;;		line 37 in file "ECU_Layer/Ecu_led.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  led             2    9[COMRAM] PTR const struct .
   765 ;;		 -> led_1(1), 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  pin_obj         1   12[COMRAM] struct .
   768 ;;  ret             1    0        unsigned char 
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      unsigned char 
   771 ;; Registers used:
   772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;Total ram usage:        4 bytes
   783 ;; Hardware stack levels used: 1
   784 ;; Hardware stack levels required when called: 1
   785 ;; This function calls:
   786 ;;		_gpio_pin_write_logic
   787 ;; This function is called by:
   788 ;;		_program_1
   789 ;;		_program_2
   790 ;;		_program_3
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           	psect	text4
   795   00F9D8                     __ptext4:
   796                           	callstack 0
   797   00F9D8                     _led_turn_on:
   798                           	callstack 28
   799   00F9D8                     
   800                           ;ECU_Layer/Ecu_led.c: 40:     if(led == ((void*)0)) ret = (STD_ReturnType)0x00;
   801   00F9D8  5031               	movf	led_turn_on@led^0,w,c
   802   00F9DA  1032               	iorwf	(led_turn_on@led+1)^0,w,c
   803   00F9DC  A4D8               	btfss	status,2,c
   804   00F9DE  EFF3  F07C         	goto	u761
   805   00F9E2  EFF5  F07C         	goto	u760
   806   00F9E6                     u761:
   807   00F9E6  EFF7  F07C         	goto	l39
   808   00F9EA                     u760:
   809   00F9EA  EF26  F07D         	goto	l43
   810   00F9EE                     l39:
   811                           
   812                           ;ECU_Layer/Ecu_led.c: 42:        pin_config_t pin_obj = {
   813   00F9EE  C03E  F034         	movff	led_turn_on@F2881,led_turn_on@pin_obj
   814   00F9F2  C031  FFD9         	movff	led_turn_on@led,fsr2l
   815   00F9F6  C032  FFDA         	movff	led_turn_on@led+1,fsr2h
   816   00F9FA  50DF               	movf	223,w,c
   817   00F9FC  0B0F               	andlw	15
   818   00F9FE  6E33               	movwf	??_led_turn_on^0,c
   819   00FA00  5034               	movf	led_turn_on@pin_obj^0,w,c
   820   00FA02  1833               	xorwf	??_led_turn_on^0,w,c
   821   00FA04  0BF8               	andlw	-8
   822   00FA06  1833               	xorwf	??_led_turn_on^0,w,c
   823   00FA08  6E34               	movwf	led_turn_on@pin_obj^0,c
   824   00FA0A  C031  FFD9         	movff	led_turn_on@led,fsr2l
   825   00FA0E  C032  FFDA         	movff	led_turn_on@led+1,fsr2h
   826   00FA12  38DF               	swapf	223,w,c
   827   00FA14  0B07               	andlw	7
   828   00FA16  6E33               	movwf	??_led_turn_on^0,c
   829   00FA18  4633               	rlncf	??_led_turn_on^0,f,c
   830   00FA1A  4633               	rlncf	??_led_turn_on^0,f,c
   831   00FA1C  4633               	rlncf	??_led_turn_on^0,f,c
   832   00FA1E  5034               	movf	led_turn_on@pin_obj^0,w,c
   833   00FA20  1833               	xorwf	??_led_turn_on^0,w,c
   834   00FA22  0BC7               	andlw	-57
   835   00FA24  1833               	xorwf	??_led_turn_on^0,w,c
   836   00FA26  6E34               	movwf	led_turn_on@pin_obj^0,c
   837   00FA28  9C34               	bcf	led_turn_on@pin_obj^0,6,c
   838   00FA2A  C031  FFD9         	movff	led_turn_on@led,fsr2l
   839   00FA2E  C032  FFDA         	movff	led_turn_on@led+1,fsr2h
   840   00FA32  AEDF               	btfss	indf2,7,c
   841   00FA34  D002               	bra	u775
   842   00FA36  8E34               	bsf	led_turn_on@pin_obj^0,7,c
   843   00FA38  D001               	bra	u777
   844   00FA3A                     u775:
   845   00FA3A  9E34               	bcf	led_turn_on@pin_obj^0,7,c
   846   00FA3C                     u777:
   847   00FA3C                     
   848                           ;ECU_Layer/Ecu_led.c: 48:         gpio_pin_write_logic(&pin_obj, GPIO_HIGH);
   849   00FA3C  0E34               	movlw	low led_turn_on@pin_obj
   850   00FA3E  6E28               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   851   00FA40  0E00               	movlw	high led_turn_on@pin_obj
   852   00FA42  6E29               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
   853   00FA44  0E01               	movlw	1
   854   00FA46  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
   855   00FA48  ECAF  F07E         	call	_gpio_pin_write_logic	;wreg free
   856   00FA4C                     l43:
   857   00FA4C  0012               	return		;funcret
   858   00FA4E                     __end_of_led_turn_on:
   859                           	callstack 0
   860                           
   861 ;; *************** function _led_turn_off *****************
   862 ;; Defined at:
   863 ;;		line 54 in file "ECU_Layer/Ecu_led.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;  led             2    9[COMRAM] PTR const struct .
   866 ;;		 -> led_1(1), 
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  pin_obj         1   12[COMRAM] struct .
   869 ;;  ret             1    0        unsigned char 
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      unsigned char 
   872 ;; Registers used:
   873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;Total ram usage:        4 bytes
   884 ;; Hardware stack levels used: 1
   885 ;; Hardware stack levels required when called: 1
   886 ;; This function calls:
   887 ;;		_gpio_pin_write_logic
   888 ;; This function is called by:
   889 ;;		_program_1
   890 ;;		_program_2
   891 ;;		_program_3
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text5
   896   00F962                     __ptext5:
   897                           	callstack 0
   898   00F962                     _led_turn_off:
   899                           	callstack 28
   900   00F962                     
   901                           ;ECU_Layer/Ecu_led.c: 56:     if(led == ((void*)0)) ret = (STD_ReturnType)0x00;
   902   00F962  5031               	movf	led_turn_off@led^0,w,c
   903   00F964  1032               	iorwf	(led_turn_off@led+1)^0,w,c
   904   00F966  A4D8               	btfss	status,2,c
   905   00F968  EFB8  F07C         	goto	u781
   906   00F96C  EFBA  F07C         	goto	u780
   907   00F970                     u781:
   908   00F970  EFBC  F07C         	goto	l46
   909   00F974                     u780:
   910   00F974  EFEB  F07C         	goto	l50
   911   00F978                     l46:
   912                           
   913                           ;ECU_Layer/Ecu_led.c: 58:        pin_config_t pin_obj = {
   914   00F978  C03D  F034         	movff	led_turn_off@F2886,led_turn_off@pin_obj
   915   00F97C  C031  FFD9         	movff	led_turn_off@led,fsr2l
   916   00F980  C032  FFDA         	movff	led_turn_off@led+1,fsr2h
   917   00F984  50DF               	movf	223,w,c
   918   00F986  0B0F               	andlw	15
   919   00F988  6E33               	movwf	??_led_turn_off^0,c
   920   00F98A  5034               	movf	led_turn_off@pin_obj^0,w,c
   921   00F98C  1833               	xorwf	??_led_turn_off^0,w,c
   922   00F98E  0BF8               	andlw	-8
   923   00F990  1833               	xorwf	??_led_turn_off^0,w,c
   924   00F992  6E34               	movwf	led_turn_off@pin_obj^0,c
   925   00F994  C031  FFD9         	movff	led_turn_off@led,fsr2l
   926   00F998  C032  FFDA         	movff	led_turn_off@led+1,fsr2h
   927   00F99C  38DF               	swapf	223,w,c
   928   00F99E  0B07               	andlw	7
   929   00F9A0  6E33               	movwf	??_led_turn_off^0,c
   930   00F9A2  4633               	rlncf	??_led_turn_off^0,f,c
   931   00F9A4  4633               	rlncf	??_led_turn_off^0,f,c
   932   00F9A6  4633               	rlncf	??_led_turn_off^0,f,c
   933   00F9A8  5034               	movf	led_turn_off@pin_obj^0,w,c
   934   00F9AA  1833               	xorwf	??_led_turn_off^0,w,c
   935   00F9AC  0BC7               	andlw	-57
   936   00F9AE  1833               	xorwf	??_led_turn_off^0,w,c
   937   00F9B0  6E34               	movwf	led_turn_off@pin_obj^0,c
   938   00F9B2  9C34               	bcf	led_turn_off@pin_obj^0,6,c
   939   00F9B4  C031  FFD9         	movff	led_turn_off@led,fsr2l
   940   00F9B8  C032  FFDA         	movff	led_turn_off@led+1,fsr2h
   941   00F9BC  AEDF               	btfss	indf2,7,c
   942   00F9BE  D002               	bra	u795
   943   00F9C0  8E34               	bsf	led_turn_off@pin_obj^0,7,c
   944   00F9C2  D001               	bra	u797
   945   00F9C4                     u795:
   946   00F9C4  9E34               	bcf	led_turn_off@pin_obj^0,7,c
   947   00F9C6                     u797:
   948   00F9C6                     
   949                           ;ECU_Layer/Ecu_led.c: 64:         gpio_pin_write_logic(&pin_obj, GPIO_LOW);
   950   00F9C6  0E34               	movlw	low led_turn_off@pin_obj
   951   00F9C8  6E28               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   952   00F9CA  0E00               	movlw	high led_turn_off@pin_obj
   953   00F9CC  6E29               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
   954   00F9CE  0E00               	movlw	0
   955   00F9D0  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
   956   00F9D2  ECAF  F07E         	call	_gpio_pin_write_logic	;wreg free
   957   00F9D6                     l50:
   958   00F9D6  0012               	return		;funcret
   959   00F9D8                     __end_of_led_turn_off:
   960                           	callstack 0
   961                           
   962 ;; *************** function _button_read_state *****************
   963 ;; Defined at:
   964 ;;		line 36 in file "ECU_Layer/ecu_button.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  btn             2    9[COMRAM] PTR const struct .
   967 ;;		 -> btn_1(3), 
   968 ;;  btn_state       2   11[COMRAM] PTR enum E2856
   969 ;;		 -> btn_high_status(1), 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  Pin_Logic_St    1   14[COMRAM] enum E2798
   972 ;;  ret             1    0        unsigned char 
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      unsigned char 
   975 ;; Registers used:
   976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;Total ram usage:        6 bytes
   987 ;; Hardware stack levels used: 1
   988 ;; Hardware stack levels required when called: 1
   989 ;; This function calls:
   990 ;;		_gpio_pin_read_logic
   991 ;; This function is called by:
   992 ;;		_main
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text6
   997   00FAE6                     __ptext6:
   998                           	callstack 0
   999   00FAE6                     _button_read_state:
  1000                           	callstack 29
  1001   00FAE6                     
  1002                           ;ECU_Layer/ecu_button.c: 38:     logic_t Pin_Logic_Status = GPIO_LOW;
  1003   00FAE6  0E00               	movlw	0
  1004   00FAE8  6E36               	movwf	button_read_state@Pin_Logic_Status^0,c
  1005   00FAEA                     
  1006                           ;ECU_Layer/ecu_button.c: 39:     if((((void*)0) == btn) || (((void*)0) == btn_state)){
  1007   00FAEA  5031               	movf	button_read_state@btn^0,w,c
  1008   00FAEC  1032               	iorwf	(button_read_state@btn+1)^0,w,c
  1009   00FAEE  B4D8               	btfsc	status,2,c
  1010   00FAF0  EF7C  F07D         	goto	u801
  1011   00FAF4  EF7E  F07D         	goto	u800
  1012   00FAF8                     u801:
  1013   00FAF8  EF87  F07D         	goto	l1402
  1014   00FAFC                     u800:
  1015   00FAFC  5033               	movf	button_read_state@btn_state^0,w,c
  1016   00FAFE  1034               	iorwf	(button_read_state@btn_state+1)^0,w,c
  1017   00FB00  A4D8               	btfss	status,2,c
  1018   00FB02  EF85  F07D         	goto	u811
  1019   00FB06  EF87  F07D         	goto	u810
  1020   00FB0A                     u811:
  1021   00FB0A  EF89  F07D         	goto	l1404
  1022   00FB0E                     u810:
  1023   00FB0E                     l1402:
  1024                           
  1025                           ;ECU_Layer/ecu_button.c: 41:     }
  1026   00FB0E  EFD1  F07D         	goto	l1422
  1027   00FB12                     l1404:
  1028                           
  1029                           ;ECU_Layer/ecu_button.c: 43:         gpio_pin_read_logic(&(btn->button_pin), &Pin_Logic_
      +                          Status);
  1030   00FB12  C031  F028         	movff	button_read_state@btn,gpio_pin_read_logic@_pin_config_t
  1031   00FB16  C032  F029         	movff	button_read_state@btn+1,gpio_pin_read_logic@_pin_config_t+1
  1032   00FB1A  0E36               	movlw	low button_read_state@Pin_Logic_Status
  1033   00FB1C  6E2A               	movwf	gpio_pin_read_logic@logic^0,c
  1034   00FB1E  0E00               	movlw	high button_read_state@Pin_Logic_Status
  1035   00FB20  6E2B               	movwf	(gpio_pin_read_logic@logic+1)^0,c
  1036   00FB22  ECD3  F07D         	call	_gpio_pin_read_logic	;wreg free
  1037   00FB26                     
  1038                           ;ECU_Layer/ecu_button.c: 44:         if(BUTTON_ACTIVE_HIGH == btn->button_connection){
  1039   00FB26  EE20 F002          	lfsr	2,2
  1040   00FB2A  5031               	movf	button_read_state@btn^0,w,c
  1041   00FB2C  26D9               	addwf	fsr2l,f,c
  1042   00FB2E  5032               	movf	(button_read_state@btn+1)^0,w,c
  1043   00FB30  22DA               	addwfc	fsr2h,f,c
  1044   00FB32  50DF               	movf	indf2,w,c
  1045   00FB34  A4D8               	btfss	status,2,c
  1046   00FB36  EF9F  F07D         	goto	u821
  1047   00FB3A  EFA1  F07D         	goto	u820
  1048   00FB3E                     u821:
  1049   00FB3E  EFB9  F07D         	goto	l1414
  1050   00FB42                     u820:
  1051   00FB42                     
  1052                           ;ECU_Layer/ecu_button.c: 45:             if(GPIO_HIGH == Pin_Logic_Status){
  1053   00FB42  0436               	decf	button_read_state@Pin_Logic_Status^0,w,c
  1054   00FB44  A4D8               	btfss	status,2,c
  1055   00FB46  EFA7  F07D         	goto	u831
  1056   00FB4A  EFA9  F07D         	goto	u830
  1057   00FB4E                     u831:
  1058   00FB4E  EFB1  F07D         	goto	l1412
  1059   00FB52                     u830:
  1060   00FB52                     l1410:
  1061                           
  1062                           ;ECU_Layer/ecu_button.c: 46:                 *btn_state = BUTTON_PRESSED;
  1063   00FB52  C033  FFD9         	movff	button_read_state@btn_state,fsr2l
  1064   00FB56  C034  FFDA         	movff	button_read_state@btn_state+1,fsr2h
  1065   00FB5A  0E00               	movlw	0
  1066   00FB5C  6EDF               	movwf	indf2,c
  1067                           
  1068                           ;ECU_Layer/ecu_button.c: 47:             }
  1069   00FB5E  EFD1  F07D         	goto	l1422
  1070   00FB62                     l1412:
  1071                           
  1072                           ;ECU_Layer/ecu_button.c: 49:                 *btn_state = BUTTON_RELEASED;
  1073   00FB62  C033  FFD9         	movff	button_read_state@btn_state,fsr2l
  1074   00FB66  C034  FFDA         	movff	button_read_state@btn_state+1,fsr2h
  1075   00FB6A  0E01               	movlw	1
  1076   00FB6C  6EDF               	movwf	indf2,c
  1077   00FB6E  EFD1  F07D         	goto	l1422
  1078   00FB72                     l1414:
  1079   00FB72  EE20 F002          	lfsr	2,2
  1080   00FB76  5031               	movf	button_read_state@btn^0,w,c
  1081   00FB78  26D9               	addwf	fsr2l,f,c
  1082   00FB7A  5032               	movf	(button_read_state@btn+1)^0,w,c
  1083   00FB7C  22DA               	addwfc	fsr2h,f,c
  1084   00FB7E  04DE               	decf	postinc2,w,c
  1085   00FB80  A4D8               	btfss	status,2,c
  1086   00FB82  EFC5  F07D         	goto	u841
  1087   00FB86  EFC7  F07D         	goto	u840
  1088   00FB8A                     u841:
  1089   00FB8A  EFD1  F07D         	goto	l1422
  1090   00FB8E                     u840:
  1091   00FB8E                     
  1092                           ;ECU_Layer/ecu_button.c: 53:             if(GPIO_HIGH == Pin_Logic_Status){
  1093   00FB8E  0436               	decf	button_read_state@Pin_Logic_Status^0,w,c
  1094   00FB90  A4D8               	btfss	status,2,c
  1095   00FB92  EFCD  F07D         	goto	u851
  1096   00FB96  EFCF  F07D         	goto	u850
  1097   00FB9A                     u851:
  1098   00FB9A  EFA9  F07D         	goto	l1410
  1099   00FB9E                     u850:
  1100   00FB9E  EFB1  F07D         	goto	l1412
  1101   00FBA2                     l1422:
  1102                           
  1103                           ;ECU_Layer/ecu_button.c: 61:     return ret;
  1104   00FBA2  0E00               	movlw	0
  1105   00FBA4  0012               	return		;funcret
  1106   00FBA6                     __end_of_button_read_state:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function _gpio_pin_read_logic *****************
  1110 ;; Defined at:
  1111 ;;		line 96 in file "MCAL_Layer/hal_gpio.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  _pin_config_    2    0[COMRAM] PTR const struct .
  1114 ;;		 -> btn_1(3), 
  1115 ;;  logic           2    2[COMRAM] PTR enum E2798
  1116 ;;		 -> button_read_state@Pin_Logic_Status(1), 
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;  ret             1    0        unsigned char 
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      unsigned char 
  1121 ;; Registers used:
  1122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1128 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;Total ram usage:        9 bytes
  1133 ;; Hardware stack levels used: 1
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_button_read_state
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           	psect	text7
  1142   00FBA6                     __ptext7:
  1143                           	callstack 0
  1144   00FBA6                     _gpio_pin_read_logic:
  1145                           	callstack 29
  1146   00FBA6                     
  1147                           ;MCAL_Layer/hal_gpio.c: 98:     if(_pin_config_t == ((void*)0) || logic == ((void*)0) ||
      +                           (_pin_config_t->port > 5 - 1) || (_pin_config_t->pin > 8 - 1)) ret = (STD_ReturnType)0x
      +                          00;
  1148   00FBA6  5028               	movf	gpio_pin_read_logic@_pin_config_t^0,w,c
  1149   00FBA8  1029               	iorwf	(gpio_pin_read_logic@_pin_config_t+1)^0,w,c
  1150   00FBAA  B4D8               	btfsc	status,2,c
  1151   00FBAC  EFDA  F07D         	goto	u691
  1152   00FBB0  EFDC  F07D         	goto	u690
  1153   00FBB4                     u691:
  1154   00FBB4  EF05  F07E         	goto	l1338
  1155   00FBB8                     u690:
  1156   00FBB8  502A               	movf	gpio_pin_read_logic@logic^0,w,c
  1157   00FBBA  102B               	iorwf	(gpio_pin_read_logic@logic+1)^0,w,c
  1158   00FBBC  B4D8               	btfsc	status,2,c
  1159   00FBBE  EFE3  F07D         	goto	u701
  1160   00FBC2  EFE5  F07D         	goto	u700
  1161   00FBC6                     u701:
  1162   00FBC6  EF05  F07E         	goto	l1338
  1163   00FBCA                     u700:
  1164   00FBCA  C028  FFD9         	movff	gpio_pin_read_logic@_pin_config_t,fsr2l
  1165   00FBCE  C029  FFDA         	movff	gpio_pin_read_logic@_pin_config_t+1,fsr2h
  1166   00FBD2  50DF               	movf	223,w,c
  1167   00FBD4  0B07               	andlw	7
  1168   00FBD6  6E2C               	movwf	??_gpio_pin_read_logic^0,c
  1169   00FBD8  0E05               	movlw	5
  1170   00FBDA  602C               	cpfslt	??_gpio_pin_read_logic^0,c
  1171   00FBDC  EFF2  F07D         	goto	u711
  1172   00FBE0  EFF4  F07D         	goto	u710
  1173   00FBE4                     u711:
  1174   00FBE4  EF05  F07E         	goto	l1338
  1175   00FBE8                     u710:
  1176   00FBE8  C028  FFD9         	movff	gpio_pin_read_logic@_pin_config_t,fsr2l
  1177   00FBEC  C029  FFDA         	movff	gpio_pin_read_logic@_pin_config_t+1,fsr2h
  1178   00FBF0  30DF               	rrcf	223,w,c
  1179   00FBF2  32E8               	rrcf	wreg,f,c
  1180   00FBF4  32E8               	rrcf	wreg,f,c
  1181   00FBF6  0B07               	andlw	7
  1182   00FBF8  6E2C               	movwf	??_gpio_pin_read_logic^0,c
  1183   00FBFA  0E07               	movlw	7
  1184   00FBFC  642C               	cpfsgt	??_gpio_pin_read_logic^0,c
  1185   00FBFE  EF03  F07E         	goto	u721
  1186   00FC02  EF05  F07E         	goto	u720
  1187   00FC06                     u721:
  1188   00FC06  EF07  F07E         	goto	l1340
  1189   00FC0A                     u720:
  1190   00FC0A                     l1338:
  1191   00FC0A  EF38  F07E         	goto	l131
  1192   00FC0E                     l1340:
  1193                           
  1194                           ;MCAL_Layer/hal_gpio.c: 100:         *logic = ((*port_register[_pin_config_t->port] >> _
      +                          pin_config_t->pin) & 1);
  1195   00FC0E  C028  FFD9         	movff	gpio_pin_read_logic@_pin_config_t,fsr2l
  1196   00FC12  C029  FFDA         	movff	gpio_pin_read_logic@_pin_config_t+1,fsr2h
  1197   00FC16  30DF               	rrcf	223,w,c
  1198   00FC18  32E8               	rrcf	wreg,f,c
  1199   00FC1A  32E8               	rrcf	wreg,f,c
  1200   00FC1C  0B07               	andlw	7
  1201   00FC1E  6E2C               	movwf	??_gpio_pin_read_logic^0,c
  1202   00FC20  C028  FFD9         	movff	gpio_pin_read_logic@_pin_config_t,fsr2l
  1203   00FC24  C029  FFDA         	movff	gpio_pin_read_logic@_pin_config_t+1,fsr2h
  1204   00FC28  50DF               	movf	223,w,c
  1205   00FC2A  0B07               	andlw	7
  1206   00FC2C  6E2D               	movwf	(??_gpio_pin_read_logic+1)^0,c
  1207   00FC2E  502D               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  1208   00FC30  0D02               	mullw	2
  1209   00FC32  0E01               	movlw	low _port_register
  1210   00FC34  24F3               	addwf	243,w,c
  1211   00FC36  6ED9               	movwf	fsr2l,c
  1212   00FC38  0E00               	movlw	high _port_register
  1213   00FC3A  20F4               	addwfc	prodh,w,c
  1214   00FC3C  6EDA               	movwf	fsr2h,c
  1215   00FC3E  CFDE F02E          	movff	postinc2,??_gpio_pin_read_logic+2
  1216   00FC42  CFDD F02F          	movff	postdec2,??_gpio_pin_read_logic+3
  1217   00FC46  C02E  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
  1218   00FC4A  C02F  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
  1219   00FC4E  50DF               	movf	indf2,w,c
  1220   00FC50  6E30               	movwf	(??_gpio_pin_read_logic+4)^0,c
  1221   00FC52  2A2C               	incf	??_gpio_pin_read_logic^0,f,c
  1222   00FC54  EF2E  F07E         	goto	u734
  1223   00FC58                     u735:
  1224   00FC58  90D8               	bcf	status,0,c
  1225   00FC5A  3230               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  1226   00FC5C                     u734:
  1227   00FC5C  2E2C               	decfsz	??_gpio_pin_read_logic^0,f,c
  1228   00FC5E  EF2C  F07E         	goto	u735
  1229   00FC62  5030               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  1230   00FC64  0B01               	andlw	1
  1231   00FC66  C02A  FFD9         	movff	gpio_pin_read_logic@logic,fsr2l
  1232   00FC6A  C02B  FFDA         	movff	gpio_pin_read_logic@logic+1,fsr2h
  1233   00FC6E  6EDF               	movwf	indf2,c
  1234   00FC70                     l131:
  1235   00FC70  0012               	return		;funcret
  1236   00FC72                     __end_of_gpio_pin_read_logic:
  1237                           	callstack 0
  1238                           
  1239 ;; *************** function _Application_initialize *****************
  1240 ;; Defined at:
  1241 ;;		line 109 in file "Application.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;Total ram usage:        0 bytes
  1260 ;; Hardware stack levels used: 1
  1261 ;; Hardware stack levels required when called: 2
  1262 ;; This function calls:
  1263 ;;		_button_initialize
  1264 ;;		_led_initialize
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text8
  1271   00F878                     __ptext8:
  1272                           	callstack 0
  1273   00F878                     _Application_initialize:
  1274                           	callstack 28
  1275   00F878                     
  1276                           ;Application.c: 110:     ret = led_initialize(&led_1);
  1277   00F878  0E27               	movlw	low _led_1
  1278   00F87A  6E31               	movwf	led_initialize@led^0,c
  1279   00F87C  0E00               	movlw	high _led_1
  1280   00F87E  6E32               	movwf	(led_initialize@led+1)^0,c
  1281   00F880  EC27  F07D         	call	_led_initialize	;wreg free
  1282   00F884  6E21               	movwf	_ret^0,c
  1283                           
  1284                           ;Application.c: 111:     ret = led_initialize(&led_2);
  1285   00F886  0E26               	movlw	low _led_2
  1286   00F888  6E31               	movwf	led_initialize@led^0,c
  1287   00F88A  0E00               	movlw	high _led_2
  1288   00F88C  6E32               	movwf	(led_initialize@led+1)^0,c
  1289   00F88E  EC27  F07D         	call	_led_initialize	;wreg free
  1290   00F892  6E21               	movwf	_ret^0,c
  1291                           
  1292                           ;Application.c: 112:     ret = button_initialize(&btn_1);
  1293   00F894  0E22               	movlw	low _btn_1
  1294   00F896  6E31               	movwf	button_initialize@btn^0,c
  1295   00F898  0E00               	movlw	high _btn_1
  1296   00F89A  6E32               	movwf	(button_initialize@btn+1)^0,c
  1297   00F89C  EC26  F07C         	call	_button_initialize	;wreg free
  1298   00F8A0  6E21               	movwf	_ret^0,c
  1299   00F8A2  0012               	return		;funcret
  1300   00F8A4                     __end_of_Application_initialize:
  1301                           	callstack 0
  1302                           
  1303 ;; *************** function _led_initialize *****************
  1304 ;; Defined at:
  1305 ;;		line 20 in file "ECU_Layer/Ecu_led.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  led             2    9[COMRAM] PTR const struct .
  1308 ;;		 -> led_2(1), led_1(1), 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;  pin_obj         1   13[COMRAM] struct .
  1311 ;;  ret             1   12[COMRAM] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      unsigned char 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;Total ram usage:        5 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 1
  1328 ;; This function calls:
  1329 ;;		_gpio_pin_direction_init
  1330 ;;		_gpio_pin_write_logic
  1331 ;; This function is called by:
  1332 ;;		_Application_initialize
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text9
  1337   00FA4E                     __ptext9:
  1338                           	callstack 0
  1339   00FA4E                     _led_initialize:
  1340                           	callstack 28
  1341   00FA4E                     
  1342                           ;ECU_Layer/Ecu_led.c: 21:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1343   00FA4E  0E01               	movlw	1
  1344   00FA50  6E34               	movwf	led_initialize@ret^0,c
  1345   00FA52                     
  1346                           ;ECU_Layer/Ecu_led.c: 22:     if(led == ((void*)0)) ret = (STD_ReturnType)0x00;
  1347   00FA52  5031               	movf	led_initialize@led^0,w,c
  1348   00FA54  1032               	iorwf	(led_initialize@led+1)^0,w,c
  1349   00FA56  A4D8               	btfss	status,2,c
  1350   00FA58  EF30  F07D         	goto	u741
  1351   00FA5C  EF32  F07D         	goto	u740
  1352   00FA60                     u741:
  1353   00FA60  EF36  F07D         	goto	l32
  1354   00FA64                     u740:
  1355   00FA64  0E00               	movlw	0
  1356   00FA66  6E34               	movwf	led_initialize@ret^0,c
  1357   00FA68  EF71  F07D         	goto	l1360
  1358   00FA6C                     l32:
  1359                           
  1360                           ;ECU_Layer/Ecu_led.c: 24:        pin_config_t pin_obj = {
  1361   00FA6C  C03F  F035         	movff	led_initialize@F2876,led_initialize@pin_obj
  1362   00FA70  C031  FFD9         	movff	led_initialize@led,fsr2l
  1363   00FA74  C032  FFDA         	movff	led_initialize@led+1,fsr2h
  1364   00FA78  50DF               	movf	223,w,c
  1365   00FA7A  0B0F               	andlw	15
  1366   00FA7C  6E33               	movwf	??_led_initialize^0,c
  1367   00FA7E  5035               	movf	led_initialize@pin_obj^0,w,c
  1368   00FA80  1833               	xorwf	??_led_initialize^0,w,c
  1369   00FA82  0BF8               	andlw	-8
  1370   00FA84  1833               	xorwf	??_led_initialize^0,w,c
  1371   00FA86  6E35               	movwf	led_initialize@pin_obj^0,c
  1372   00FA88  C031  FFD9         	movff	led_initialize@led,fsr2l
  1373   00FA8C  C032  FFDA         	movff	led_initialize@led+1,fsr2h
  1374   00FA90  38DF               	swapf	223,w,c
  1375   00FA92  0B07               	andlw	7
  1376   00FA94  6E33               	movwf	??_led_initialize^0,c
  1377   00FA96  4633               	rlncf	??_led_initialize^0,f,c
  1378   00FA98  4633               	rlncf	??_led_initialize^0,f,c
  1379   00FA9A  4633               	rlncf	??_led_initialize^0,f,c
  1380   00FA9C  5035               	movf	led_initialize@pin_obj^0,w,c
  1381   00FA9E  1833               	xorwf	??_led_initialize^0,w,c
  1382   00FAA0  0BC7               	andlw	-57
  1383   00FAA2  1833               	xorwf	??_led_initialize^0,w,c
  1384   00FAA4  6E35               	movwf	led_initialize@pin_obj^0,c
  1385   00FAA6  9C35               	bcf	led_initialize@pin_obj^0,6,c
  1386   00FAA8  C031  FFD9         	movff	led_initialize@led,fsr2l
  1387   00FAAC  C032  FFDA         	movff	led_initialize@led+1,fsr2h
  1388   00FAB0  AEDF               	btfss	indf2,7,c
  1389   00FAB2  D002               	bra	u755
  1390   00FAB4  8E35               	bsf	led_initialize@pin_obj^0,7,c
  1391   00FAB6  D001               	bra	u757
  1392   00FAB8                     u755:
  1393   00FAB8  9E35               	bcf	led_initialize@pin_obj^0,7,c
  1394   00FABA                     u757:
  1395   00FABA                     
  1396                           ;ECU_Layer/Ecu_led.c: 30:         gpio_pin_direction_init(&pin_obj);
  1397   00FABA  0E35               	movlw	low led_initialize@pin_obj
  1398   00FABC  6E28               	movwf	gpio_pin_direction_init@_pin_config_t^0,c
  1399   00FABE  0E00               	movlw	high led_initialize@pin_obj
  1400   00FAC0  6E29               	movwf	(gpio_pin_direction_init@_pin_config_t+1)^0,c
  1401   00FAC2  EC4F  F07F         	call	_gpio_pin_direction_init	;wreg free
  1402   00FAC6                     
  1403                           ;ECU_Layer/Ecu_led.c: 31:         gpio_pin_write_logic(&pin_obj, led->led_status);
  1404   00FAC6  0E35               	movlw	low led_initialize@pin_obj
  1405   00FAC8  6E28               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  1406   00FACA  0E00               	movlw	high led_initialize@pin_obj
  1407   00FACC  6E29               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
  1408   00FACE  C031  FFD9         	movff	led_initialize@led,fsr2l
  1409   00FAD2  C032  FFDA         	movff	led_initialize@led+1,fsr2h
  1410   00FAD6  0E00               	movlw	0
  1411   00FAD8  BEDF               	btfsc	indf2,7,c
  1412   00FADA  0E01               	movlw	1
  1413   00FADC  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  1414   00FADE  ECAF  F07E         	call	_gpio_pin_write_logic	;wreg free
  1415   00FAE2                     l1360:
  1416                           
  1417                           ;ECU_Layer/Ecu_led.c: 33:     return ret;
  1418   00FAE2  5034               	movf	led_initialize@ret^0,w,c
  1419   00FAE4  0012               	return		;funcret
  1420   00FAE6                     __end_of_led_initialize:
  1421                           	callstack 0
  1422                           
  1423 ;; *************** function _gpio_pin_write_logic *****************
  1424 ;; Defined at:
  1425 ;;		line 70 in file "MCAL_Layer/hal_gpio.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  _pin_config_    2    0[COMRAM] PTR const struct .
  1428 ;;		 -> led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  1429 ;;  logic           1    2[COMRAM] enum E2798
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  ret             1    0        unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      unsigned char 
  1434 ;; Registers used:
  1435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1441 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;Total ram usage:        9 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		_led_initialize
  1451 ;;		_led_turn_on
  1452 ;;		_led_turn_off
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text10
  1457   00FD5E                     __ptext10:
  1458                           	callstack 0
  1459   00FD5E                     _gpio_pin_write_logic:
  1460                           	callstack 28
  1461   00FD5E                     
  1462                           ;MCAL_Layer/hal_gpio.c: 72:     if(_pin_config_t == ((void*)0) || (_pin_config_t->port >
      +                           5 - 1) || (_pin_config_t->pin > 8 - 1)) ret = (STD_ReturnType)0x00;
  1463   00FD5E  5028               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1464   00FD60  1029               	iorwf	(gpio_pin_write_logic@_pin_config_t+1)^0,w,c
  1465   00FD62  B4D8               	btfsc	status,2,c
  1466   00FD64  EFB6  F07E         	goto	u631
  1467   00FD68  EFB8  F07E         	goto	u630
  1468   00FD6C                     u631:
  1469   00FD6C  EFD8  F07E         	goto	l1302
  1470   00FD70                     u630:
  1471   00FD70  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1472   00FD74  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1473   00FD78  50DF               	movf	223,w,c
  1474   00FD7A  0B07               	andlw	7
  1475   00FD7C  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1476   00FD7E  0E05               	movlw	5
  1477   00FD80  602B               	cpfslt	??_gpio_pin_write_logic^0,c
  1478   00FD82  EFC5  F07E         	goto	u641
  1479   00FD86  EFC7  F07E         	goto	u640
  1480   00FD8A                     u641:
  1481   00FD8A  EFD8  F07E         	goto	l1302
  1482   00FD8E                     u640:
  1483   00FD8E  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1484   00FD92  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1485   00FD96  30DF               	rrcf	223,w,c
  1486   00FD98  32E8               	rrcf	wreg,f,c
  1487   00FD9A  32E8               	rrcf	wreg,f,c
  1488   00FD9C  0B07               	andlw	7
  1489   00FD9E  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1490   00FDA0  0E07               	movlw	7
  1491   00FDA2  642B               	cpfsgt	??_gpio_pin_write_logic^0,c
  1492   00FDA4  EFD6  F07E         	goto	u651
  1493   00FDA8  EFD8  F07E         	goto	u650
  1494   00FDAC                     u651:
  1495   00FDAC  EF39  F07F         	goto	l1310
  1496   00FDB0                     u650:
  1497   00FDB0                     l1302:
  1498   00FDB0  EF4E  F07F         	goto	l124
  1499   00FDB4                     l1304:
  1500                           
  1501                           ;MCAL_Layer/hal_gpio.c: 76:                 (*lat_register[_pin_config_t->port] &= ~(1 <
      +                          < _pin_config_t->pin));
  1502   00FDB4  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1503   00FDB8  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1504   00FDBC  30DF               	rrcf	223,w,c
  1505   00FDBE  32E8               	rrcf	wreg,f,c
  1506   00FDC0  32E8               	rrcf	wreg,f,c
  1507   00FDC2  0B07               	andlw	7
  1508   00FDC4  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1509   00FDC6  0E01               	movlw	1
  1510   00FDC8  6E2C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1511   00FDCA  2A2B               	incf	??_gpio_pin_write_logic^0,f,c
  1512   00FDCC  EFEA  F07E         	goto	u664
  1513   00FDD0                     u665:
  1514   00FDD0  90D8               	bcf	status,0,c
  1515   00FDD2  362C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1516   00FDD4                     u664:
  1517   00FDD4  2E2B               	decfsz	??_gpio_pin_write_logic^0,f,c
  1518   00FDD6  EFE8  F07E         	goto	u665
  1519   00FDDA  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1520   00FDDC  0AFF               	xorlw	255
  1521   00FDDE  6E2D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1522   00FDE0  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1523   00FDE4  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1524   00FDE8  50DF               	movf	223,w,c
  1525   00FDEA  0B07               	andlw	7
  1526   00FDEC  6E2E               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1527   00FDEE  502E               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1528   00FDF0  0D02               	mullw	2
  1529   00FDF2  0E0B               	movlw	low _lat_register
  1530   00FDF4  24F3               	addwf	243,w,c
  1531   00FDF6  6ED9               	movwf	fsr2l,c
  1532   00FDF8  0E00               	movlw	high _lat_register
  1533   00FDFA  20F4               	addwfc	prodh,w,c
  1534   00FDFC  6EDA               	movwf	fsr2h,c
  1535   00FDFE  CFDE F02F          	movff	postinc2,??_gpio_pin_write_logic+4
  1536   00FE02  CFDD F030          	movff	postdec2,??_gpio_pin_write_logic+5
  1537   00FE06  C02F  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1538   00FE0A  C030  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1539   00FE0E  502D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1540   00FE10  16DF               	andwf	indf2,f,c
  1541                           
  1542                           ;MCAL_Layer/hal_gpio.c: 77:                 break;
  1543   00FE12  EF4E  F07F         	goto	l124
  1544   00FE16                     l1306:
  1545                           
  1546                           ;MCAL_Layer/hal_gpio.c: 79:                 (*lat_register[_pin_config_t->port] |= (1 <<
      +                           _pin_config_t->pin));
  1547   00FE16  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1548   00FE1A  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1549   00FE1E  30DF               	rrcf	223,w,c
  1550   00FE20  32E8               	rrcf	wreg,f,c
  1551   00FE22  32E8               	rrcf	wreg,f,c
  1552   00FE24  0B07               	andlw	7
  1553   00FE26  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1554   00FE28  0E01               	movlw	1
  1555   00FE2A  6E2C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1556   00FE2C  2A2B               	incf	??_gpio_pin_write_logic^0,f,c
  1557   00FE2E  EF1B  F07F         	goto	u674
  1558   00FE32                     u675:
  1559   00FE32  90D8               	bcf	status,0,c
  1560   00FE34  362C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1561   00FE36                     u674:
  1562   00FE36  2E2B               	decfsz	??_gpio_pin_write_logic^0,f,c
  1563   00FE38  EF19  F07F         	goto	u675
  1564   00FE3C  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1565   00FE40  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1566   00FE44  50DF               	movf	223,w,c
  1567   00FE46  0B07               	andlw	7
  1568   00FE48  6E2D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1569   00FE4A  502D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1570   00FE4C  0D02               	mullw	2
  1571   00FE4E  0E0B               	movlw	low _lat_register
  1572   00FE50  24F3               	addwf	243,w,c
  1573   00FE52  6ED9               	movwf	fsr2l,c
  1574   00FE54  0E00               	movlw	high _lat_register
  1575   00FE56  20F4               	addwfc	prodh,w,c
  1576   00FE58  6EDA               	movwf	fsr2h,c
  1577   00FE5A  CFDE F02E          	movff	postinc2,??_gpio_pin_write_logic+3
  1578   00FE5E  CFDD F02F          	movff	postdec2,??_gpio_pin_write_logic+4
  1579   00FE62  C02E  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1580   00FE66  C02F  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1581   00FE6A  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1582   00FE6C  12DF               	iorwf	indf2,f,c
  1583                           
  1584                           ;MCAL_Layer/hal_gpio.c: 80:                 break;
  1585   00FE6E  EF4E  F07F         	goto	l124
  1586   00FE72                     l1310:
  1587   00FE72  502A               	movf	gpio_pin_write_logic@logic^0,w,c
  1588   00FE74  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1589   00FE76  6A2C               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1590                           
  1591                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1592                           ; Switch size 1, requested type "simple"
  1593                           ; Number of cases is 1, Range of values is 0 to 0
  1594                           ; switch strategies available:
  1595                           ; Name         Instructions Cycles
  1596                           ; simple_byte            4     3 (average)
  1597                           ;	Chosen strategy is simple_byte
  1598   00FE78  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1599   00FE7A  0A00               	xorlw	0	; case 0
  1600   00FE7C  B4D8               	btfsc	status,2,c
  1601   00FE7E  EF43  F07F         	goto	l1514
  1602   00FE82  EFD8  F07E         	goto	l1302
  1603   00FE86                     l1514:
  1604                           
  1605                           ; Switch size 1, requested type "simple"
  1606                           ; Number of cases is 2, Range of values is 0 to 1
  1607                           ; switch strategies available:
  1608                           ; Name         Instructions Cycles
  1609                           ; simple_byte            7     4 (average)
  1610                           ;	Chosen strategy is simple_byte
  1611   00FE86  502B               	movf	??_gpio_pin_write_logic^0,w,c
  1612   00FE88  0A00               	xorlw	0	; case 0
  1613   00FE8A  B4D8               	btfsc	status,2,c
  1614   00FE8C  EFDA  F07E         	goto	l1304
  1615   00FE90  0A01               	xorlw	1	; case 1
  1616   00FE92  B4D8               	btfsc	status,2,c
  1617   00FE94  EF0B  F07F         	goto	l1306
  1618   00FE98  EFD8  F07E         	goto	l1302
  1619   00FE9C                     l124:
  1620   00FE9C  0012               	return		;funcret
  1621   00FE9E                     __end_of_gpio_pin_write_logic:
  1622                           	callstack 0
  1623                           
  1624 ;; *************** function _button_initialize *****************
  1625 ;; Defined at:
  1626 ;;		line 17 in file "ECU_Layer/ecu_button.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  btn             2    9[COMRAM] PTR const struct .
  1629 ;;		 -> btn_1(3), 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  ret             1   11[COMRAM] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      unsigned char 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;Total ram usage:        3 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 1
  1648 ;; This function calls:
  1649 ;;		_gpio_pin_direction_init
  1650 ;; This function is called by:
  1651 ;;		_Application_initialize
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text11
  1656   00F84C                     __ptext11:
  1657                           	callstack 0
  1658   00F84C                     _button_initialize:
  1659                           	callstack 28
  1660   00F84C                     
  1661                           ;ECU_Layer/ecu_button.c: 19:     if(((void*)0) == btn){
  1662   00F84C  5031               	movf	button_initialize@btn^0,w,c
  1663   00F84E  1032               	iorwf	(button_initialize@btn+1)^0,w,c
  1664   00F850  A4D8               	btfss	status,2,c
  1665   00F852  EF2D  F07C         	goto	u681
  1666   00F856  EF2F  F07C         	goto	u680
  1667   00F85A                     u681:
  1668   00F85A  EF33  F07C         	goto	l1322
  1669   00F85E                     u680:
  1670   00F85E                     
  1671                           ;ECU_Layer/ecu_button.c: 20:         ret = (STD_ReturnType)0x00;
  1672   00F85E  0E00               	movlw	0
  1673   00F860  6E33               	movwf	button_initialize@ret^0,c
  1674                           
  1675                           ;ECU_Layer/ecu_button.c: 21:     }
  1676   00F862  EF3A  F07C         	goto	l1324
  1677   00F866                     l1322:
  1678                           
  1679                           ;ECU_Layer/ecu_button.c: 23:         ret = gpio_pin_direction_init(&(btn->button_pin));
  1680   00F866  C031  F028         	movff	button_initialize@btn,gpio_pin_direction_init@_pin_config_t
  1681   00F86A  C032  F029         	movff	button_initialize@btn+1,gpio_pin_direction_init@_pin_config_t+1
  1682   00F86E  EC4F  F07F         	call	_gpio_pin_direction_init	;wreg free
  1683   00F872  6E33               	movwf	button_initialize@ret^0,c
  1684   00F874                     l1324:
  1685                           
  1686                           ;ECU_Layer/ecu_button.c: 25:     return ret;
  1687   00F874  5033               	movf	button_initialize@ret^0,w,c
  1688   00F876  0012               	return		;funcret
  1689   00F878                     __end_of_button_initialize:
  1690                           	callstack 0
  1691                           
  1692 ;; *************** function _gpio_pin_direction_init *****************
  1693 ;; Defined at:
  1694 ;;		line 24 in file "MCAL_Layer/hal_gpio.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  _pin_config_    2    0[COMRAM] PTR const struct .
  1697 ;;		 -> btn_1(3), led_initialize@pin_obj(1), 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  ret             1    8[COMRAM] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      unsigned char 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;Total ram usage:        9 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_button_initialize
  1719 ;;		_led_initialize
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text12
  1724   00FE9E                     __ptext12:
  1725                           	callstack 0
  1726   00FE9E                     _gpio_pin_direction_init:
  1727                           	callstack 28
  1728   00FE9E                     
  1729                           ;MCAL_Layer/hal_gpio.c: 25:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1730   00FE9E  0E01               	movlw	1
  1731   00FEA0  6E30               	movwf	gpio_pin_direction_init@ret^0,c
  1732   00FEA2                     
  1733                           ;MCAL_Layer/hal_gpio.c: 26:     if(_pin_config_t == ((void*)0) || (_pin_config_t->port >
      +                           (5 - 1)) || (_pin_config_t->pin > (8 - 1))) ret = (STD_ReturnType)0x00;
  1734   00FEA2  5028               	movf	gpio_pin_direction_init@_pin_config_t^0,w,c
  1735   00FEA4  1029               	iorwf	(gpio_pin_direction_init@_pin_config_t+1)^0,w,c
  1736   00FEA6  B4D8               	btfsc	status,2,c
  1737   00FEA8  EF58  F07F         	goto	u561
  1738   00FEAC  EF5A  F07F         	goto	u560
  1739   00FEB0                     u561:
  1740   00FEB0  EF7A  F07F         	goto	l1276
  1741   00FEB4                     u560:
  1742   00FEB4  C028  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1743   00FEB8  C029  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1744   00FEBC  50DF               	movf	223,w,c
  1745   00FEBE  0B07               	andlw	7
  1746   00FEC0  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  1747   00FEC2  0E05               	movlw	5
  1748   00FEC4  602A               	cpfslt	??_gpio_pin_direction_init^0,c
  1749   00FEC6  EF67  F07F         	goto	u571
  1750   00FECA  EF69  F07F         	goto	u570
  1751   00FECE                     u571:
  1752   00FECE  EF7A  F07F         	goto	l1276
  1753   00FED2                     u570:
  1754   00FED2  C028  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1755   00FED6  C029  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1756   00FEDA  30DF               	rrcf	223,w,c
  1757   00FEDC  32E8               	rrcf	wreg,f,c
  1758   00FEDE  32E8               	rrcf	wreg,f,c
  1759   00FEE0  0B07               	andlw	7
  1760   00FEE2  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  1761   00FEE4  0E07               	movlw	7
  1762   00FEE6  642A               	cpfsgt	??_gpio_pin_direction_init^0,c
  1763   00FEE8  EF78  F07F         	goto	u581
  1764   00FEEC  EF7A  F07F         	goto	u580
  1765   00FEF0                     u581:
  1766   00FEF0  EFDD  F07F         	goto	l1284
  1767   00FEF4                     u580:
  1768   00FEF4                     l1276:
  1769   00FEF4  0E00               	movlw	0
  1770   00FEF6  6E30               	movwf	gpio_pin_direction_init@ret^0,c
  1771   00FEF8  EFFE  F07F         	goto	l1286
  1772   00FEFC                     l1278:
  1773                           
  1774                           ;MCAL_Layer/hal_gpio.c: 30:                 (*tris_register[_pin_config_t->port] &= ~(1 
      +                          << _pin_config_t->pin));
  1775   00FEFC  C028  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1776   00FF00  C029  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1777   00FF04  30DF               	rrcf	223,w,c
  1778   00FF06  32E8               	rrcf	wreg,f,c
  1779   00FF08  32E8               	rrcf	wreg,f,c
  1780   00FF0A  0B07               	andlw	7
  1781   00FF0C  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  1782   00FF0E  0E01               	movlw	1
  1783   00FF10  6E2B               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1784   00FF12  2A2A               	incf	??_gpio_pin_direction_init^0,f,c
  1785   00FF14  EF8E  F07F         	goto	u594
  1786   00FF18                     u595:
  1787   00FF18  90D8               	bcf	status,0,c
  1788   00FF1A  362B               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1789   00FF1C                     u594:
  1790   00FF1C  2E2A               	decfsz	??_gpio_pin_direction_init^0,f,c
  1791   00FF1E  EF8C  F07F         	goto	u595
  1792   00FF22  502B               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1793   00FF24  0AFF               	xorlw	255
  1794   00FF26  6E2C               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1795   00FF28  C028  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1796   00FF2C  C029  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1797   00FF30  50DF               	movf	223,w,c
  1798   00FF32  0B07               	andlw	7
  1799   00FF34  6E2D               	movwf	(??_gpio_pin_direction_init+3)^0,c
  1800   00FF36  502D               	movf	(??_gpio_pin_direction_init+3)^0,w,c
  1801   00FF38  0D02               	mullw	2
  1802   00FF3A  0E15               	movlw	low _tris_register
  1803   00FF3C  24F3               	addwf	243,w,c
  1804   00FF3E  6ED9               	movwf	fsr2l,c
  1805   00FF40  0E00               	movlw	high _tris_register
  1806   00FF42  20F4               	addwfc	prodh,w,c
  1807   00FF44  6EDA               	movwf	fsr2h,c
  1808   00FF46  CFDE F02E          	movff	postinc2,??_gpio_pin_direction_init+4
  1809   00FF4A  CFDD F02F          	movff	postdec2,??_gpio_pin_direction_init+5
  1810   00FF4E  C02E  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
  1811   00FF52  C02F  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
  1812   00FF56  502C               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1813   00FF58  16DF               	andwf	indf2,f,c
  1814                           
  1815                           ;MCAL_Layer/hal_gpio.c: 31:                 break;
  1816   00FF5A  EFFE  F07F         	goto	l1286
  1817   00FF5E                     l1280:
  1818                           
  1819                           ;MCAL_Layer/hal_gpio.c: 33:                 (*tris_register[_pin_config_t->port] |= (1 <
      +                          < _pin_config_t->pin));
  1820   00FF5E  C028  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1821   00FF62  C029  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1822   00FF66  30DF               	rrcf	223,w,c
  1823   00FF68  32E8               	rrcf	wreg,f,c
  1824   00FF6A  32E8               	rrcf	wreg,f,c
  1825   00FF6C  0B07               	andlw	7
  1826   00FF6E  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  1827   00FF70  0E01               	movlw	1
  1828   00FF72  6E2B               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1829   00FF74  2A2A               	incf	??_gpio_pin_direction_init^0,f,c
  1830   00FF76  EFBF  F07F         	goto	u604
  1831   00FF7A                     u605:
  1832   00FF7A  90D8               	bcf	status,0,c
  1833   00FF7C  362B               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1834   00FF7E                     u604:
  1835   00FF7E  2E2A               	decfsz	??_gpio_pin_direction_init^0,f,c
  1836   00FF80  EFBD  F07F         	goto	u605
  1837   00FF84  C028  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1838   00FF88  C029  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1839   00FF8C  50DF               	movf	223,w,c
  1840   00FF8E  0B07               	andlw	7
  1841   00FF90  6E2C               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1842   00FF92  502C               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1843   00FF94  0D02               	mullw	2
  1844   00FF96  0E15               	movlw	low _tris_register
  1845   00FF98  24F3               	addwf	243,w,c
  1846   00FF9A  6ED9               	movwf	fsr2l,c
  1847   00FF9C  0E00               	movlw	high _tris_register
  1848   00FF9E  20F4               	addwfc	prodh,w,c
  1849   00FFA0  6EDA               	movwf	fsr2h,c
  1850   00FFA2  CFDE F02D          	movff	postinc2,??_gpio_pin_direction_init+3
  1851   00FFA6  CFDD F02E          	movff	postdec2,??_gpio_pin_direction_init+4
  1852   00FFAA  C02D  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1853   00FFAE  C02E  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1854   00FFB2  502B               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1855   00FFB4  12DF               	iorwf	indf2,f,c
  1856                           
  1857                           ;MCAL_Layer/hal_gpio.c: 34:                 break;
  1858   00FFB6  EFFE  F07F         	goto	l1286
  1859   00FFBA                     l1284:
  1860   00FFBA  C028  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1861   00FFBE  C029  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1862   00FFC2  BCDF               	btfsc	indf2,6,c
  1863   00FFC4  EFE6  F07F         	goto	u611
  1864   00FFC8  EFE9  F07F         	goto	u610
  1865   00FFCC                     u611:
  1866   00FFCC  0E01               	movlw	1
  1867   00FFCE  EFEA  F07F         	goto	u620
  1868   00FFD2                     u610:
  1869   00FFD2  0E00               	movlw	0
  1870   00FFD4                     u620:
  1871   00FFD4  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  1872   00FFD6  6A2B               	clrf	(??_gpio_pin_direction_init+1)^0,c
  1873                           
  1874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1875                           ; Switch size 1, requested type "simple"
  1876                           ; Number of cases is 1, Range of values is 0 to 0
  1877                           ; switch strategies available:
  1878                           ; Name         Instructions Cycles
  1879                           ; simple_byte            4     3 (average)
  1880                           ;	Chosen strategy is simple_byte
  1881   00FFD8  502B               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1882   00FFDA  0A00               	xorlw	0	; case 0
  1883   00FFDC  B4D8               	btfsc	status,2,c
  1884   00FFDE  EFF3  F07F         	goto	l1516
  1885   00FFE2  EF7A  F07F         	goto	l1276
  1886   00FFE6                     l1516:
  1887                           
  1888                           ; Switch size 1, requested type "simple"
  1889                           ; Number of cases is 2, Range of values is 0 to 1
  1890                           ; switch strategies available:
  1891                           ; Name         Instructions Cycles
  1892                           ; simple_byte            7     4 (average)
  1893                           ;	Chosen strategy is simple_byte
  1894   00FFE6  502A               	movf	??_gpio_pin_direction_init^0,w,c
  1895   00FFE8  0A00               	xorlw	0	; case 0
  1896   00FFEA  B4D8               	btfsc	status,2,c
  1897   00FFEC  EF7E  F07F         	goto	l1278
  1898   00FFF0  0A01               	xorlw	1	; case 1
  1899   00FFF2  B4D8               	btfsc	status,2,c
  1900   00FFF4  EFAF  F07F         	goto	l1280
  1901   00FFF8  EF7A  F07F         	goto	l1276
  1902   00FFFC                     l1286:
  1903                           
  1904                           ;MCAL_Layer/hal_gpio.c: 38:     return ret;
  1905   00FFFC  5030               	movf	gpio_pin_direction_init@ret^0,w,c
  1906   00FFFE  0012               	return		;funcret
  1907   010000                     __end_of_gpio_pin_direction_init:
  1908                           	callstack 0
  1909   000000                     
  1910                           	psect	rparam
  1911   000000                     
  1912                           	psect	idloc
  1913                           
  1914                           ;Config register IDLOC0 @ 0x200000
  1915                           ;	unspecified, using default values
  1916   200000                     	org	2097152
  1917   200000  FF                 	db	255
  1918                           
  1919                           ;Config register IDLOC1 @ 0x200001
  1920                           ;	unspecified, using default values
  1921   200001                     	org	2097153
  1922   200001  FF                 	db	255
  1923                           
  1924                           ;Config register IDLOC2 @ 0x200002
  1925                           ;	unspecified, using default values
  1926   200002                     	org	2097154
  1927   200002  FF                 	db	255
  1928                           
  1929                           ;Config register IDLOC3 @ 0x200003
  1930                           ;	unspecified, using default values
  1931   200003                     	org	2097155
  1932   200003  FF                 	db	255
  1933                           
  1934                           ;Config register IDLOC4 @ 0x200004
  1935                           ;	unspecified, using default values
  1936   200004                     	org	2097156
  1937   200004  FF                 	db	255
  1938                           
  1939                           ;Config register IDLOC5 @ 0x200005
  1940                           ;	unspecified, using default values
  1941   200005                     	org	2097157
  1942   200005  FF                 	db	255
  1943                           
  1944                           ;Config register IDLOC6 @ 0x200006
  1945                           ;	unspecified, using default values
  1946   200006                     	org	2097158
  1947   200006  FF                 	db	255
  1948                           
  1949                           ;Config register IDLOC7 @ 0x200007
  1950                           ;	unspecified, using default values
  1951   200007                     	org	2097159
  1952   200007  FF                 	db	255
  1953                           
  1954                           	psect	config
  1955                           
  1956                           ; Padding undefined space
  1957   300000                     	org	3145728
  1958   300000  FF                 	db	255
  1959                           
  1960                           ;Config register CONFIG1H @ 0x300001
  1961                           ;	Oscillator Selection bits
  1962                           ;	OSC = HS, HS oscillator
  1963                           ;	Fail-Safe Clock Monitor Enable bit
  1964                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1965                           ;	Internal/External Oscillator Switchover bit
  1966                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1967   300001                     	org	3145729
  1968   300001  02                 	db	2
  1969                           
  1970                           ;Config register CONFIG2L @ 0x300002
  1971                           ;	Power-up Timer Enable bit
  1972                           ;	PWRT = OFF, PWRT disabled
  1973                           ;	Brown-out Reset Enable bits
  1974                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1975                           ;	Brown Out Reset Voltage bits
  1976                           ;	BORV = 1, 
  1977   300002                     	org	3145730
  1978   300002  09                 	db	9
  1979                           
  1980                           ;Config register CONFIG2H @ 0x300003
  1981                           ;	Watchdog Timer Enable bit
  1982                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1983                           ;	Watchdog Timer Postscale Select bits
  1984                           ;	WDTPS = 32768, 1:32768
  1985   300003                     	org	3145731
  1986   300003  1E                 	db	30
  1987                           
  1988                           ; Padding undefined space
  1989   300004                     	org	3145732
  1990   300004  FF                 	db	255
  1991                           
  1992                           ;Config register CONFIG3H @ 0x300005
  1993                           ;	CCP2 MUX bit
  1994                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1995                           ;	PORTB A/D Enable bit
  1996                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1997                           ;	Low-Power Timer1 Oscillator Enable bit
  1998                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1999                           ;	MCLR Pin Enable bit
  2000                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2001   300005                     	org	3145733
  2002   300005  83                 	db	131
  2003                           
  2004                           ;Config register CONFIG4L @ 0x300006
  2005                           ;	Stack Full/Underflow Reset Enable bit
  2006                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2007                           ;	Single-Supply ICSP Enable bit
  2008                           ;	LVP = OFF, Single-Supply ICSP disabled
  2009                           ;	Extended Instruction Set Enable bit
  2010                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2011                           ;	Background Debugger Enable bit
  2012                           ;	DEBUG = 0x1, unprogrammed default
  2013   300006                     	org	3145734
  2014   300006  81                 	db	129
  2015                           
  2016                           ; Padding undefined space
  2017   300007                     	org	3145735
  2018   300007  FF                 	db	255
  2019                           
  2020                           ;Config register CONFIG5L @ 0x300008
  2021                           ;	Code Protection bit
  2022                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2023                           ;	Code Protection bit
  2024                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2025                           ;	Code Protection bit
  2026                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2027                           ;	Code Protection bit
  2028                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2029   300008                     	org	3145736
  2030   300008  0F                 	db	15
  2031                           
  2032                           ;Config register CONFIG5H @ 0x300009
  2033                           ;	Boot Block Code Protection bit
  2034                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2035                           ;	Data EEPROM Code Protection bit
  2036                           ;	CPD = OFF, Data EEPROM not code-protected
  2037   300009                     	org	3145737
  2038   300009  C0                 	db	192
  2039                           
  2040                           ;Config register CONFIG6L @ 0x30000A
  2041                           ;	Write Protection bit
  2042                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2043                           ;	Write Protection bit
  2044                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2045                           ;	Write Protection bit
  2046                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2047                           ;	Write Protection bit
  2048                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2049   30000A                     	org	3145738
  2050   30000A  0F                 	db	15
  2051                           
  2052                           ;Config register CONFIG6H @ 0x30000B
  2053                           ;	Configuration Register Write Protection bit
  2054                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2055                           ;	Boot Block Write Protection bit
  2056                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2057                           ;	Data EEPROM Write Protection bit
  2058                           ;	WRTD = OFF, Data EEPROM not write-protected
  2059   30000B                     	org	3145739
  2060   30000B  E0                 	db	224
  2061                           
  2062                           ;Config register CONFIG7L @ 0x30000C
  2063                           ;	Table Read Protection bit
  2064                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2065                           ;	Table Read Protection bit
  2066                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2067                           ;	Table Read Protection bit
  2068                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2069                           ;	Table Read Protection bit
  2070                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2071   30000C                     	org	3145740
  2072   30000C  0F                 	db	15
  2073                           
  2074                           ;Config register CONFIG7H @ 0x30000D
  2075                           ;	Boot Block Table Read Protection bit
  2076                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2077   30000D                     	org	3145741
  2078   30000D  40                 	db	64
  2079                           tosu	equ	0xFFF
  2080                           tosh	equ	0xFFE
  2081                           tosl	equ	0xFFD
  2082                           stkptr	equ	0xFFC
  2083                           pclatu	equ	0xFFB
  2084                           pclath	equ	0xFFA
  2085                           pcl	equ	0xFF9
  2086                           tblptru	equ	0xFF8
  2087                           tblptrh	equ	0xFF7
  2088                           tblptrl	equ	0xFF6
  2089                           tablat	equ	0xFF5
  2090                           prodh	equ	0xFF4
  2091                           prodl	equ	0xFF3
  2092                           indf0	equ	0xFEF
  2093                           postinc0	equ	0xFEE
  2094                           postdec0	equ	0xFED
  2095                           preinc0	equ	0xFEC
  2096                           plusw0	equ	0xFEB
  2097                           fsr0h	equ	0xFEA
  2098                           fsr0l	equ	0xFE9
  2099                           wreg	equ	0xFE8
  2100                           indf1	equ	0xFE7
  2101                           postinc1	equ	0xFE6
  2102                           postdec1	equ	0xFE5
  2103                           preinc1	equ	0xFE4
  2104                           plusw1	equ	0xFE3
  2105                           fsr1h	equ	0xFE2
  2106                           fsr1l	equ	0xFE1
  2107                           bsr	equ	0xFE0
  2108                           indf2	equ	0xFDF
  2109                           postinc2	equ	0xFDE
  2110                           postdec2	equ	0xFDD
  2111                           preinc2	equ	0xFDC
  2112                           plusw2	equ	0xFDB
  2113                           fsr2h	equ	0xFDA
  2114                           fsr2l	equ	0xFD9
  2115                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        39
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     17      63
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_read_logic@logic	PTR enum E2798 size(2) Largest target is 1
		 -> button_read_state@Pin_Logic_Status(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config_t	PTR const struct . size(2) Largest target is 3
		 -> btn_1(COMRAM[3]), 

    gpio_pin_write_logic@_pin_config_t	PTR const struct . size(2) Largest target is 1
		 -> led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_init@_pin_config_t	PTR const struct . size(2) Largest target is 3
		 -> btn_1(COMRAM[3]), led_initialize@pin_obj(COMRAM[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    led_turn_off@led	PTR const struct . size(2) Largest target is 1
		 -> led_1(COMRAM[1]), 

    led_turn_on@led	PTR const struct . size(2) Largest target is 1
		 -> led_1(COMRAM[1]), 

    led_initialize@led	PTR const struct . size(2) Largest target is 1
		 -> led_2(COMRAM[1]), led_1(COMRAM[1]), 

    button_read_state@btn_state	PTR enum E2856 size(2) Largest target is 1
		 -> btn_high_status(COMRAM[1]), 

    button_read_state@btn	PTR const struct . size(2) Largest target is 3
		 -> btn_1(COMRAM[3]), 

    button_initialize@btn	PTR const struct . size(2) Largest target is 3
		 -> btn_1(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_button_read_state
    _program_3->_led_turn_off
    _program_3->_led_turn_on
    _program_2->_led_turn_off
    _program_2->_led_turn_on
    _program_1->_led_turn_off
    _program_1->_led_turn_on
    _led_turn_on->_gpio_pin_write_logic
    _led_turn_off->_gpio_pin_write_logic
    _button_read_state->_gpio_pin_read_logic
    _Application_initialize->_led_initialize
    _led_initialize->_gpio_pin_direction_init
    _led_initialize->_gpio_pin_write_logic
    _button_initialize->_gpio_pin_direction_init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8679
                                             15 COMRAM     2     2      0
             _Application_initialize
                  _button_read_state
                          _program_1
                          _program_2
                          _program_3
 ---------------------------------------------------------------------------------
 (1) _program_3                                            1     1      0    2043
                                             13 COMRAM     1     1      0
                       _led_turn_off
                        _led_turn_on
 ---------------------------------------------------------------------------------
 (1) _program_2                                            1     1      0    2043
                                             13 COMRAM     1     1      0
                       _led_turn_off
                        _led_turn_on
 ---------------------------------------------------------------------------------
 (1) _program_1                                            0     0      0    1996
                       _led_turn_off
                        _led_turn_on
 ---------------------------------------------------------------------------------
 (2) _led_turn_on                                          5     3      2     998
                                              9 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _led_turn_off                                         5     3      2     998
                                              9 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _button_read_state                                    7     3      4     757
                                              9 COMRAM     6     2      4
                _gpio_pin_read_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                 10     6      4     314
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Application_initialize                               0     0      0    1840
                  _button_initialize
                     _led_initialize
 ---------------------------------------------------------------------------------
 (2) _led_initialize                                       5     3      2    1342
                                              9 COMRAM     5     3      2
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                10     7      3     641
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (2) _button_initialize                                    3     1      2     498
                                              9 COMRAM     3     1      2
            _gpio_pin_direction_init
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_init                              9     7      2     353
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_initialize
     _button_initialize
       _gpio_pin_direction_init
     _led_initialize
       _gpio_pin_direction_init
       _gpio_pin_write_logic
   _button_read_state
     _gpio_pin_read_logic
   _program_1
     _led_turn_off
       _gpio_pin_write_logic
     _led_turn_on
       _gpio_pin_write_logic
   _program_2
     _led_turn_off
     _led_turn_on
   _program_3
     _led_turn_off
     _led_turn_on

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     11      3F       1       49.6%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F      39        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Sep 18 18:08:49 2022

                                   l9 F876                                    l23 FBA4  
                                  l32 FA6C                                    l50 F9D6  
                                  l43 FA4C                                    l36 FAE4  
                                  l46 F978                                    l39 F9EE  
                                 l105 FFFE                                   l131 FC70  
                                 l124 FE9C                                   l212 F91C  
                                 l222 FC76                                   l207 F84A  
                                 l240 F8A2                                   l217 F960  
                                 l226 FD56                                   u610 FFD2  
                                 u611 FFCC                                   u620 FFD4  
                                 u604 FF7E                                   u700 FBCA  
                                 u605 FF7A                                   u701 FBC6  
                                 u630 FD70                                   u710 FBE8  
                                 u631 FD6C                                   u711 FBE4  
                                 u560 FEB4                                   u640 FD8E  
                                 u720 FC0A                                   u800 FAFC  
                                 u561 FEB0                                   u641 FD8A  
                                 u721 FC06                                   u801 FAF8  
                                 u570 FED2                                   u650 FDB0  
                                 u810 FB0E                                   u571 FECE  
                                 u651 FDAC                                   u811 FB0A  
                                 u580 FEF4                                   u740 FA64  
                                 u820 FB42                                   u900 FCDC  
                                 u581 FEF0                                   u741 FA60  
                                 u821 FB3E                                   u901 FCD8  
                                 u734 FC5C                                   u830 FB52  
                                 u910 FCF0                                   u735 FC58  
                                 u831 FB4E                                   u911 FCEC  
                                 u680 F85E                                   u664 FDD4  
                                 u840 FB8E                                   u760 F9EA  
                                 u920 FD02                                   u681 F85A  
                                 u665 FDD0                                   u841 FB8A  
                                 u761 F9E6                                   u921 FCFE  
                                 u594 FF1C                                   u674 FE36  
                                 u690 FBB8                                   u850 FB9E  
                                 u595 FF18                                   u675 FE32  
                                 u755 FAB8                                   u691 FBB4  
                                 u851 FB9A                                   u780 F974  
                                 u860 F91C                                   u757 FABA  
                                 u781 F970                                   u861 F918  
                                 u870 F960                                   u775 FA3A  
                                 u871 F95C                                   u880 FC9C  
                                 u777 FA3C                                   u937 F934  
                                 u881 FC98                                   u890 FCB6  
                                 u795 F9C4                                   u947 F948  
                                 u891 FCB2                                   u797 F9C6  
                                 u957 F8F0                                   u967 F904  
                                 u977 F830                                   u987 F844  
                                 _ret 0021                                   prod 000FF3  
                 led_initialize@F2876 003F                                   wreg 000FE8  
                        ?_led_turn_on 0031                                  l1300 FD8E  
                                l1310 FE72                                  l1302 FDB0  
                                l1320 F85E                                  l1304 FDB4  
                                l1400 FAFC                                  l1322 F866  
                                l1306 FE16                                  l1330 FBA6  
                                l1410 FB52                                  l1402 FB0E  
                                l1324 F874                                  l1316 F84C  
                                l1340 FC0E                                  l1332 FBB8  
                                l1412 FB62                                  l1404 FB12  
                                l1270 FEA2                                  l1318 F84C  
                                l1350 FA70                                  l1334 FBCA  
                                l1414 FB72                                  l1406 FB26  
                                l1422 FBA2                                  l1430 F836  
                                l1280 FF5E                                  l1272 FEB4  
                                l1352 FAA6                                  l1360 FAE2  
                                l1344 FA4E                                  l1336 FBE8  
                                l1328 FBA6                                  l1416 FB8E  
                                l1408 FB42                                  l1440 F8EE  
                                l1432 F8DA                                  l1512 FD38  
                                l1274 FED2                                  l1514 FE86  
                                l1354 FAA8                                  l1346 FA52  
                                l1338 FC0A                                  l1370 F9F2  
                                l1426 F822                                  l1442 F8F6  
                                l1516 FFE6                                  l1284 FFBA  
                                l1276 FEF4                                  l1268 FE9E  
                                l1356 FABA                                  l1348 FA64  
                                l1460 F878                                  l1380 F962  
                                l1372 FA28                                  l1364 F9D8  
                                l1428 F82E                                  l1444 F90A  
                                l1452 F926                                  l1278 FEFC  
                                l1286 FFFC                                  l1294 FD5E  
                                l1358 FAC6                                  l1390 F9B4  
                                l1382 F962                                  l1374 FA2A  
                                l1366 F9D8                                  l1438 F8E2  
                                l1454 F932                                  l1446 F91E  
                                l1470 FCB6                                  l1462 FC72  
                                l1296 FD5E                                  l1392 F9C6  
                                l1384 F974                                  l1376 FA3C  
                                l1368 F9EA                                  l1456 F93A  
                                l1480 FCF0                                  l1472 FCBE  
                                l1464 FC8C                                  l1298 FD70  
                                l1386 F97C                                  l1458 F94E  
                                l1490 FD1C                                  l1482 FD02  
                                l1474 FCCA                                  l1466 FC9C  
                                l1396 FAE6                                  l1388 F9B2  
                                l1484 FD06                                  l1476 FCDC  
                                l1468 FCA0                                  l1398 FAEA  
                                l1486 FD0C                                  l1494 FD24  
                                l1478 FCE0                                  l1488 FD14  
                                _LATA 000F89                                  _LATB 000F8A  
                                _LATC 000F8B                                  _LATD 000F8C  
                                _LATE 000F8D                                  _main FC72  
                                fsr2h 000FDA                                  indf2 000FDF  
                                fsr1l 000FE1                                  fsr2l 000FD9  
            ?_gpio_pin_direction_init 0028                __end_of_led_initialize FAE6  
                                prodl 000FF3                                  start 0000  
                       ?_led_turn_off 0031                          ___param_bank 000000  
                _gpio_pin_write_logic FD5E                                 ?_main 0028  
                               _PORTA 000F80                                 _PORTB 000F81  
                               _PORTC 000F82                                 _PORTD 000F83  
                               _PORTE 000F84                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                               _TRISD 000F95                                 _TRISE 000F96  
                               _led_1 0027                                 _btn_1 0022  
                               _led_2 0026                                 tablat 000FF5  
                               status 000FD8                       ?_led_initialize 0031  
                      ??_led_turn_off 0033                       __initialization F8A4  
                        __end_of_main FD5E                 ?_gpio_pin_write_logic 0028  
            gpio_pin_read_logic@logic 002A                                ??_main 0037  
                       __activetblptr 000002                      led_turn_on@F2881 003E  
                   _button_initialize F84C                     _button_read_state FAE6  
                  ?_button_initialize 0031                    ?_button_read_state 0031  
                       _tris_register 0015                   ??_button_initialize 0033  
                 ??_button_read_state 0035               ?_Application_initialize 0028  
                              clear_0 F8CA                 led_initialize@pin_obj 0035  
                              isa$std 000001                          __pdataCOMRAM 0001  
           __end_of_button_initialize F878             __end_of_button_read_state FBA6  
                              tblptrh 000FF7                                tblptrl 000FF6  
                              tblptru 000FF8     button_read_state@Pin_Logic_Status 0036  
                          __accesstop 0080               __end_of__initialization F8D0  
                       ___rparam_used 000001                     led_initialize@led 0031  
                   led_initialize@ret 0034                ??_gpio_pin_write_logic 002B  
                      __pcstackCOMRAM 0028        __end_of_Application_initialize F8A4  
                button_initialize@btn 0031                  button_initialize@ret 0033  
                __end_of_led_turn_off F9D8                      program_2@counter 0035  
                    program_3@counter 0035                  button_read_state@btn 0031  
                   led_turn_off@F2886 003D                      _Program_Selected 003B  
                    ??_led_initialize 0033                               __Hparam 0000  
                             __Lparam 0000                   _gpio_pin_read_logic FBA6  
               _btn_high_valid_status 0020                               __pcinit F8A4  
                             __ramtop 1000                               __ptext0 FC72  
                             __ptext1 F91E                               __ptext2 F8DA  
                             __ptext3 F822                               __ptext4 F9D8  
                             __ptext5 F962                               __ptext6 FAE6  
                             __ptext7 FBA6                               __ptext8 F878  
                             __ptext9 FA4E                  ?_gpio_pin_read_logic 0028  
                end_of_initialization F8D0                         __Lmediumconst 0000  
   gpio_pin_write_logic@_pin_config_t 0028                   led_turn_off@pin_obj 0034  
                   __end_of_program_1 F84C                     __end_of_program_2 F91E  
                   __end_of_program_3 F962                               postdec1 000FE5  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc2 000FDE            button_read_state@btn_state 0033  
               ??_gpio_pin_read_logic 002C                          _led_turn_off F962  
             _gpio_pin_direction_init FE9E                         __pidataCOMRAM F7FB  
                 start_initialization F8A4                         ??_led_turn_on 0033  
                        _lat_register 000B                       led_turn_off@led 0031  
                         __pbssCOMRAM 0039                   __end_of_led_turn_on FA4E  
          _btn_high_last_valid_status 001F             ??_gpio_pin_direction_init 002A  
           gpio_pin_write_logic@logic 002A              ??_Application_initialize 0036  
                  led_turn_on@pin_obj 0034                             _program_1 F822  
                           _program_2 F8DA                             _program_3 F91E  
               led_toggle_logic@F2891 003C       __end_of_gpio_pin_direction_init 0000  
                         _led_turn_on F9D8                             copy_data0 F8B8  
                      led_turn_on@led 0031                              __Hrparam 0000  
                            __Lrparam 0000                            ?_program_1 0028  
                          ?_program_2 0028                            ?_program_3 0028  
         __end_of_gpio_pin_read_logic FC72                              __ptext10 FD5E  
                            __ptext11 F84C                              __ptext12 FE9E  
                            isa$xinst 000000  gpio_pin_direction_init@_pin_config_t 0028  
                     _btn_high_status 0025          __end_of_gpio_pin_write_logic FE9E  
                         ??_program_1 0035                           ??_program_2 0035  
                         ??_program_3 0035                        _btn_high_valid 0039  
              _Application_initialize F878            gpio_pin_direction_init@ret 0030  
    gpio_pin_read_logic@_pin_config_t 0028                         _port_register 0001  
                      _led_initialize FA4E  
